// Copyright (C) 2020 T. Zachary Laine
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

// Warning! This file is autogenerated.
#include <boost/text/collate.hpp>
#include <boost/text/collation_table.hpp>

#include <benchmark/benchmark.h>

boost::text::detail::collation_trie_t const & trie()
{
    static auto const retval = boost::text::detail::make_default_trie();
    return retval;
}

boost::text::collation_table const & table()
{
    static auto const retval = boost::text::default_collation_table();
    return retval;
}

uint32_t cps_800[] = {
0x1f7e8, 0x1f7e9, 0x1f7ea, 0x1f7eb, 0x1f7f0, 0x1f800, 0x1f801, 0x1f802, 0x1f803, 0x1f804, 0x1f805, 0x1f806, 0x1f807, 0x1f808, 0x1f809, 0x1f80a, 0x1f80b, 0x1f810, 0x1f811, 0x1f812, 0x1f813, 0x1f814, 0x1f815, 0x1f816, 0x1f817, 0x1f818, 0x1f819, 0x1f81a, 0x1f81b, 0x1f81c, 0x1f81d, 0x1f81e, 0x1f81f, 0x1f820, 0x1f821, 0x1f822, 0x1f823, 0x1f824, 0x1f825, 0x1f826, 0x1f827, 0x1f828, 0x1f829, 0x1f82a, 0x1f82b, 0x1f82c, 0x1f82d, 0x1f82e, 0x1f82f, 0x1f830
};

void BM_collation_element_lookup_800(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 0, cps_800 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 1, cps_800 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 2, cps_800 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 3, cps_800 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 4, cps_800 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 5, cps_800 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 6, cps_800 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 7, cps_800 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 8, cps_800 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 9, cps_800 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 10, cps_800 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 11, cps_800 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 12, cps_800 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 13, cps_800 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 14, cps_800 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 15, cps_800 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 16, cps_800 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 17, cps_800 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 18, cps_800 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 19, cps_800 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 20, cps_800 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 21, cps_800 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 22, cps_800 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 23, cps_800 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 24, cps_800 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 25, cps_800 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 26, cps_800 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 27, cps_800 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 28, cps_800 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 29, cps_800 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 30, cps_800 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 31, cps_800 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 32, cps_800 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 33, cps_800 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 34, cps_800 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 35, cps_800 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 36, cps_800 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 37, cps_800 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 38, cps_800 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 39, cps_800 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 40, cps_800 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 41, cps_800 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 42, cps_800 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 43, cps_800 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 44, cps_800 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 45, cps_800 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 46, cps_800 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 47, cps_800 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 48, cps_800 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_800 + 49, cps_800 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_800);

uint32_t cps_801[] = {
0x1f831, 0x1f832, 0x1f833, 0x1f834, 0x1f835, 0x1f836, 0x1f837, 0x1f838, 0x1f839, 0x1f83a, 0x1f83b, 0x1f83c, 0x1f83d, 0x1f83e, 0x1f83f, 0x1f840, 0x1f841, 0x1f842, 0x1f843, 0x1f844, 0x1f845, 0x1f846, 0x1f847, 0x1f850, 0x1f851, 0x1f852, 0x1f853, 0x1f854, 0x1f855, 0x1f856, 0x1f857, 0x1f858, 0x1f859, 0x1f860, 0x1f861, 0x1f862, 0x1f863, 0x1f864, 0x1f865, 0x1f866, 0x1f867, 0x1f868, 0x1f869, 0x1f86a, 0x1f86b, 0x1f86c, 0x1f86d, 0x1f86e, 0x1f86f, 0x1f870
};

void BM_collation_element_lookup_801(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 0, cps_801 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 1, cps_801 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 2, cps_801 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 3, cps_801 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 4, cps_801 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 5, cps_801 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 6, cps_801 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 7, cps_801 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 8, cps_801 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 9, cps_801 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 10, cps_801 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 11, cps_801 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 12, cps_801 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 13, cps_801 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 14, cps_801 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 15, cps_801 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 16, cps_801 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 17, cps_801 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 18, cps_801 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 19, cps_801 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 20, cps_801 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 21, cps_801 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 22, cps_801 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 23, cps_801 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 24, cps_801 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 25, cps_801 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 26, cps_801 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 27, cps_801 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 28, cps_801 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 29, cps_801 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 30, cps_801 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 31, cps_801 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 32, cps_801 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 33, cps_801 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 34, cps_801 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 35, cps_801 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 36, cps_801 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 37, cps_801 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 38, cps_801 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 39, cps_801 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 40, cps_801 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 41, cps_801 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 42, cps_801 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 43, cps_801 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 44, cps_801 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 45, cps_801 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 46, cps_801 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 47, cps_801 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 48, cps_801 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_801 + 49, cps_801 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_801);

uint32_t cps_802[] = {
0x1f871, 0x1f872, 0x1f873, 0x1f874, 0x1f875, 0x1f876, 0x1f877, 0x1f878, 0x1f879, 0x1f87a, 0x1f87b, 0x1f87c, 0x1f87d, 0x1f87e, 0x1f87f, 0x1f880, 0x1f881, 0x1f882, 0x1f883, 0x1f884, 0x1f885, 0x1f886, 0x1f887, 0x1f890, 0x1f891, 0x1f892, 0x1f893, 0x1f894, 0x1f895, 0x1f896, 0x1f897, 0x1f898, 0x1f899, 0x1f89a, 0x1f89b, 0x1f89c, 0x1f89d, 0x1f89e, 0x1f89f, 0x1f8a0, 0x1f8a1, 0x1f8a2, 0x1f8a3, 0x1f8a4, 0x1f8a5, 0x1f8a6, 0x1f8a7, 0x1f8a8, 0x1f8a9, 0x1f8aa
};

void BM_collation_element_lookup_802(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 0, cps_802 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 1, cps_802 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 2, cps_802 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 3, cps_802 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 4, cps_802 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 5, cps_802 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 6, cps_802 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 7, cps_802 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 8, cps_802 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 9, cps_802 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 10, cps_802 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 11, cps_802 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 12, cps_802 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 13, cps_802 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 14, cps_802 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 15, cps_802 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 16, cps_802 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 17, cps_802 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 18, cps_802 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 19, cps_802 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 20, cps_802 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 21, cps_802 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 22, cps_802 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 23, cps_802 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 24, cps_802 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 25, cps_802 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 26, cps_802 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 27, cps_802 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 28, cps_802 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 29, cps_802 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 30, cps_802 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 31, cps_802 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 32, cps_802 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 33, cps_802 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 34, cps_802 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 35, cps_802 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 36, cps_802 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 37, cps_802 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 38, cps_802 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 39, cps_802 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 40, cps_802 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 41, cps_802 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 42, cps_802 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 43, cps_802 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 44, cps_802 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 45, cps_802 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 46, cps_802 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 47, cps_802 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 48, cps_802 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_802 + 49, cps_802 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_802);

uint32_t cps_803[] = {
0x1f8ab, 0x1f8ac, 0x1f8ad, 0x1f8b0, 0x1f8b1, 0x1f900, 0x1f901, 0x1f902, 0x1f903, 0x1f904, 0x1f905, 0x1f906, 0x1f907, 0x1f908, 0x1f909, 0x1f90a, 0x1f90b, 0x1f90c, 0x1f90d, 0x1f90e, 0x1f90f, 0x1f910, 0x1f911, 0x1f912, 0x1f913, 0x1f914, 0x1f915, 0x1f916, 0x1f917, 0x1f918, 0x1f919, 0x1f91a, 0x1f91b, 0x1f91c, 0x1f91d, 0x1f91e, 0x1f91f, 0x1f920, 0x1f921, 0x1f922, 0x1f923, 0x1f924, 0x1f925, 0x1f926, 0x1f927, 0x1f928, 0x1f929, 0x1f92a, 0x1f92b, 0x1f92c
};

void BM_collation_element_lookup_803(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 0, cps_803 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 1, cps_803 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 2, cps_803 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 3, cps_803 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 4, cps_803 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 5, cps_803 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 6, cps_803 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 7, cps_803 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 8, cps_803 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 9, cps_803 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 10, cps_803 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 11, cps_803 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 12, cps_803 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 13, cps_803 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 14, cps_803 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 15, cps_803 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 16, cps_803 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 17, cps_803 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 18, cps_803 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 19, cps_803 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 20, cps_803 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 21, cps_803 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 22, cps_803 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 23, cps_803 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 24, cps_803 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 25, cps_803 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 26, cps_803 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 27, cps_803 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 28, cps_803 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 29, cps_803 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 30, cps_803 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 31, cps_803 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 32, cps_803 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 33, cps_803 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 34, cps_803 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 35, cps_803 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 36, cps_803 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 37, cps_803 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 38, cps_803 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 39, cps_803 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 40, cps_803 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 41, cps_803 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 42, cps_803 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 43, cps_803 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 44, cps_803 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 45, cps_803 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 46, cps_803 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 47, cps_803 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 48, cps_803 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_803 + 49, cps_803 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_803);

uint32_t cps_804[] = {
0x1f92d, 0x1f92e, 0x1f92f, 0x1f930, 0x1f931, 0x1f932, 0x1f933, 0x1f934, 0x1f935, 0x1f936, 0x1f937, 0x1f938, 0x1f939, 0x1f93a, 0x1f93b, 0x1f93c, 0x1f93d, 0x1f93e, 0x1f93f, 0x1f940, 0x1f941, 0x1f942, 0x1f943, 0x1f944, 0x1f945, 0x1f946, 0x1f947, 0x1f948, 0x1f949, 0x1f94a, 0x1f94b, 0x1f94c, 0x1f94d, 0x1f94e, 0x1f94f, 0x1f950, 0x1f951, 0x1f952, 0x1f953, 0x1f954, 0x1f955, 0x1f956, 0x1f957, 0x1f958, 0x1f959, 0x1f95a, 0x1f95b, 0x1f95c, 0x1f95d, 0x1f95e
};

void BM_collation_element_lookup_804(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 0, cps_804 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 1, cps_804 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 2, cps_804 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 3, cps_804 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 4, cps_804 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 5, cps_804 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 6, cps_804 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 7, cps_804 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 8, cps_804 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 9, cps_804 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 10, cps_804 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 11, cps_804 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 12, cps_804 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 13, cps_804 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 14, cps_804 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 15, cps_804 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 16, cps_804 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 17, cps_804 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 18, cps_804 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 19, cps_804 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 20, cps_804 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 21, cps_804 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 22, cps_804 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 23, cps_804 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 24, cps_804 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 25, cps_804 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 26, cps_804 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 27, cps_804 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 28, cps_804 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 29, cps_804 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 30, cps_804 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 31, cps_804 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 32, cps_804 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 33, cps_804 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 34, cps_804 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 35, cps_804 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 36, cps_804 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 37, cps_804 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 38, cps_804 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 39, cps_804 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 40, cps_804 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 41, cps_804 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 42, cps_804 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 43, cps_804 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 44, cps_804 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 45, cps_804 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 46, cps_804 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 47, cps_804 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 48, cps_804 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_804 + 49, cps_804 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_804);

uint32_t cps_805[] = {
0x1f95f, 0x1f960, 0x1f961, 0x1f962, 0x1f963, 0x1f964, 0x1f965, 0x1f966, 0x1f967, 0x1f968, 0x1f969, 0x1f96a, 0x1f96b, 0x1f96c, 0x1f96d, 0x1f96e, 0x1f96f, 0x1f970, 0x1f971, 0x1f972, 0x1f973, 0x1f974, 0x1f975, 0x1f976, 0x1f977, 0x1f978, 0x1f979, 0x1f97a, 0x1f97b, 0x1f97c, 0x1f97d, 0x1f97e, 0x1f97f, 0x1f980, 0x1f981, 0x1f982, 0x1f983, 0x1f984, 0x1f985, 0x1f986, 0x1f987, 0x1f988, 0x1f989, 0x1f98a, 0x1f98b, 0x1f98c, 0x1f98d, 0x1f98e, 0x1f98f, 0x1f990
};

void BM_collation_element_lookup_805(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 0, cps_805 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 1, cps_805 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 2, cps_805 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 3, cps_805 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 4, cps_805 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 5, cps_805 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 6, cps_805 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 7, cps_805 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 8, cps_805 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 9, cps_805 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 10, cps_805 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 11, cps_805 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 12, cps_805 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 13, cps_805 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 14, cps_805 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 15, cps_805 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 16, cps_805 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 17, cps_805 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 18, cps_805 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 19, cps_805 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 20, cps_805 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 21, cps_805 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 22, cps_805 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 23, cps_805 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 24, cps_805 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 25, cps_805 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 26, cps_805 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 27, cps_805 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 28, cps_805 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 29, cps_805 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 30, cps_805 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 31, cps_805 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 32, cps_805 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 33, cps_805 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 34, cps_805 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 35, cps_805 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 36, cps_805 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 37, cps_805 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 38, cps_805 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 39, cps_805 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 40, cps_805 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 41, cps_805 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 42, cps_805 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 43, cps_805 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 44, cps_805 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 45, cps_805 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 46, cps_805 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 47, cps_805 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 48, cps_805 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_805 + 49, cps_805 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_805);

uint32_t cps_806[] = {
0x1f991, 0x1f992, 0x1f993, 0x1f994, 0x1f995, 0x1f996, 0x1f997, 0x1f998, 0x1f999, 0x1f99a, 0x1f99b, 0x1f99c, 0x1f99d, 0x1f99e, 0x1f99f, 0x1f9a0, 0x1f9a1, 0x1f9a2, 0x1f9a3, 0x1f9a4, 0x1f9a5, 0x1f9a6, 0x1f9a7, 0x1f9a8, 0x1f9a9, 0x1f9aa, 0x1f9ab, 0x1f9ac, 0x1f9ad, 0x1f9ae, 0x1f9af, 0x1f9b0, 0x1f9b1, 0x1f9b2, 0x1f9b3, 0x1f9b4, 0x1f9b5, 0x1f9b6, 0x1f9b7, 0x1f9b8, 0x1f9b9, 0x1f9ba, 0x1f9bb, 0x1f9bc, 0x1f9bd, 0x1f9be, 0x1f9bf, 0x1f9c0, 0x1f9c1, 0x1f9c2
};

void BM_collation_element_lookup_806(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 0, cps_806 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 1, cps_806 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 2, cps_806 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 3, cps_806 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 4, cps_806 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 5, cps_806 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 6, cps_806 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 7, cps_806 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 8, cps_806 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 9, cps_806 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 10, cps_806 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 11, cps_806 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 12, cps_806 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 13, cps_806 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 14, cps_806 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 15, cps_806 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 16, cps_806 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 17, cps_806 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 18, cps_806 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 19, cps_806 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 20, cps_806 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 21, cps_806 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 22, cps_806 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 23, cps_806 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 24, cps_806 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 25, cps_806 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 26, cps_806 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 27, cps_806 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 28, cps_806 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 29, cps_806 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 30, cps_806 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 31, cps_806 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 32, cps_806 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 33, cps_806 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 34, cps_806 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 35, cps_806 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 36, cps_806 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 37, cps_806 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 38, cps_806 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 39, cps_806 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 40, cps_806 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 41, cps_806 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 42, cps_806 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 43, cps_806 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 44, cps_806 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 45, cps_806 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 46, cps_806 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 47, cps_806 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 48, cps_806 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_806 + 49, cps_806 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_806);

uint32_t cps_807[] = {
0x1f9c3, 0x1f9c4, 0x1f9c5, 0x1f9c6, 0x1f9c7, 0x1f9c8, 0x1f9c9, 0x1f9ca, 0x1f9cb, 0x1f9cc, 0x1f9cd, 0x1f9ce, 0x1f9cf, 0x1f9d0, 0x1f9d1, 0x1f9d2, 0x1f9d3, 0x1f9d4, 0x1f9d5, 0x1f9d6, 0x1f9d7, 0x1f9d8, 0x1f9d9, 0x1f9da, 0x1f9db, 0x1f9dc, 0x1f9dd, 0x1f9de, 0x1f9df, 0x1f9e0, 0x1f9e1, 0x1f9e2, 0x1f9e3, 0x1f9e4, 0x1f9e5, 0x1f9e6, 0x1f9e7, 0x1f9e8, 0x1f9e9, 0x1f9ea, 0x1f9eb, 0x1f9ec, 0x1f9ed, 0x1f9ee, 0x1f9ef, 0x1f9f0, 0x1f9f1, 0x1f9f2, 0x1f9f3, 0x1f9f4
};

void BM_collation_element_lookup_807(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 0, cps_807 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 1, cps_807 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 2, cps_807 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 3, cps_807 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 4, cps_807 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 5, cps_807 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 6, cps_807 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 7, cps_807 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 8, cps_807 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 9, cps_807 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 10, cps_807 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 11, cps_807 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 12, cps_807 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 13, cps_807 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 14, cps_807 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 15, cps_807 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 16, cps_807 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 17, cps_807 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 18, cps_807 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 19, cps_807 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 20, cps_807 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 21, cps_807 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 22, cps_807 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 23, cps_807 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 24, cps_807 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 25, cps_807 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 26, cps_807 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 27, cps_807 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 28, cps_807 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 29, cps_807 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 30, cps_807 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 31, cps_807 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 32, cps_807 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 33, cps_807 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 34, cps_807 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 35, cps_807 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 36, cps_807 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 37, cps_807 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 38, cps_807 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 39, cps_807 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 40, cps_807 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 41, cps_807 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 42, cps_807 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 43, cps_807 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 44, cps_807 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 45, cps_807 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 46, cps_807 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 47, cps_807 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 48, cps_807 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_807 + 49, cps_807 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_807);

uint32_t cps_808[] = {
0x1f9f5, 0x1f9f6, 0x1f9f7, 0x1f9f8, 0x1f9f9, 0x1f9fa, 0x1f9fb, 0x1f9fc, 0x1f9fd, 0x1f9fe, 0x1f9ff, 0x1fa00, 0x1fa01, 0x1fa02, 0x1fa03, 0x1fa04, 0x1fa05, 0x1fa06, 0x1fa07, 0x1fa08, 0x1fa09, 0x1fa0a, 0x1fa0b, 0x1fa0c, 0x1fa0d, 0x1fa0e, 0x1fa0f, 0x1fa10, 0x1fa11, 0x1fa12, 0x1fa13, 0x1fa14, 0x1fa15, 0x1fa16, 0x1fa17, 0x1fa18, 0x1fa19, 0x1fa1a, 0x1fa1b, 0x1fa1c, 0x1fa1d, 0x1fa1e, 0x1fa1f, 0x1fa20, 0x1fa21, 0x1fa22, 0x1fa23, 0x1fa24, 0x1fa25, 0x1fa26
};

void BM_collation_element_lookup_808(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 0, cps_808 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 1, cps_808 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 2, cps_808 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 3, cps_808 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 4, cps_808 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 5, cps_808 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 6, cps_808 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 7, cps_808 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 8, cps_808 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 9, cps_808 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 10, cps_808 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 11, cps_808 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 12, cps_808 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 13, cps_808 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 14, cps_808 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 15, cps_808 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 16, cps_808 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 17, cps_808 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 18, cps_808 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 19, cps_808 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 20, cps_808 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 21, cps_808 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 22, cps_808 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 23, cps_808 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 24, cps_808 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 25, cps_808 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 26, cps_808 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 27, cps_808 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 28, cps_808 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 29, cps_808 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 30, cps_808 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 31, cps_808 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 32, cps_808 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 33, cps_808 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 34, cps_808 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 35, cps_808 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 36, cps_808 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 37, cps_808 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 38, cps_808 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 39, cps_808 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 40, cps_808 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 41, cps_808 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 42, cps_808 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 43, cps_808 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 44, cps_808 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 45, cps_808 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 46, cps_808 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 47, cps_808 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 48, cps_808 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_808 + 49, cps_808 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_808);

uint32_t cps_809[] = {
0x1fa27, 0x1fa28, 0x1fa29, 0x1fa2a, 0x1fa2b, 0x1fa2c, 0x1fa2d, 0x1fa2e, 0x1fa2f, 0x1fa30, 0x1fa31, 0x1fa32, 0x1fa33, 0x1fa34, 0x1fa35, 0x1fa36, 0x1fa37, 0x1fa38, 0x1fa39, 0x1fa3a, 0x1fa3b, 0x1fa3c, 0x1fa3d, 0x1fa3e, 0x1fa3f, 0x1fa40, 0x1fa41, 0x1fa42, 0x1fa43, 0x1fa44, 0x1fa45, 0x1fa46, 0x1fa47, 0x1fa48, 0x1fa49, 0x1fa4a, 0x1fa4b, 0x1fa4c, 0x1fa4d, 0x1fa4e, 0x1fa4f, 0x1fa50, 0x1fa51, 0x1fa52, 0x1fa53, 0x1fa60, 0x1fa61, 0x1fa62, 0x1fa63, 0x1fa64
};

void BM_collation_element_lookup_809(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 0, cps_809 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 1, cps_809 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 2, cps_809 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 3, cps_809 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 4, cps_809 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 5, cps_809 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 6, cps_809 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 7, cps_809 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 8, cps_809 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 9, cps_809 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 10, cps_809 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 11, cps_809 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 12, cps_809 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 13, cps_809 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 14, cps_809 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 15, cps_809 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 16, cps_809 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 17, cps_809 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 18, cps_809 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 19, cps_809 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 20, cps_809 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 21, cps_809 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 22, cps_809 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 23, cps_809 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 24, cps_809 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 25, cps_809 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 26, cps_809 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 27, cps_809 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 28, cps_809 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 29, cps_809 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 30, cps_809 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 31, cps_809 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 32, cps_809 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 33, cps_809 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 34, cps_809 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 35, cps_809 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 36, cps_809 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 37, cps_809 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 38, cps_809 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 39, cps_809 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 40, cps_809 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 41, cps_809 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 42, cps_809 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 43, cps_809 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 44, cps_809 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 45, cps_809 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 46, cps_809 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 47, cps_809 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 48, cps_809 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_809 + 49, cps_809 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_809);

uint32_t cps_810[] = {
0x1fa65, 0x1fa66, 0x1fa67, 0x1fa68, 0x1fa69, 0x1fa6a, 0x1fa6b, 0x1fa6c, 0x1fa6d, 0x1fa70, 0x1fa71, 0x1fa72, 0x1fa73, 0x1fa74, 0x1fa78, 0x1fa79, 0x1fa7a, 0x1fa7b, 0x1fa7c, 0x1fa80, 0x1fa81, 0x1fa82, 0x1fa83, 0x1fa84, 0x1fa85, 0x1fa86, 0x1fa90, 0x1fa91, 0x1fa92, 0x1fa93, 0x1fa94, 0x1fa95, 0x1fa96, 0x1fa97, 0x1fa98, 0x1fa99, 0x1fa9a, 0x1fa9b, 0x1fa9c, 0x1fa9d, 0x1fa9e, 0x1fa9f, 0x1faa0, 0x1faa1, 0x1faa2, 0x1faa3, 0x1faa4, 0x1faa5, 0x1faa6, 0x1faa7
};

void BM_collation_element_lookup_810(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 0, cps_810 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 1, cps_810 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 2, cps_810 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 3, cps_810 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 4, cps_810 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 5, cps_810 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 6, cps_810 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 7, cps_810 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 8, cps_810 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 9, cps_810 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 10, cps_810 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 11, cps_810 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 12, cps_810 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 13, cps_810 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 14, cps_810 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 15, cps_810 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 16, cps_810 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 17, cps_810 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 18, cps_810 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 19, cps_810 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 20, cps_810 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 21, cps_810 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 22, cps_810 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 23, cps_810 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 24, cps_810 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 25, cps_810 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 26, cps_810 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 27, cps_810 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 28, cps_810 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 29, cps_810 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 30, cps_810 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 31, cps_810 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 32, cps_810 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 33, cps_810 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 34, cps_810 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 35, cps_810 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 36, cps_810 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 37, cps_810 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 38, cps_810 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 39, cps_810 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 40, cps_810 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 41, cps_810 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 42, cps_810 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 43, cps_810 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 44, cps_810 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 45, cps_810 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 46, cps_810 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 47, cps_810 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 48, cps_810 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_810 + 49, cps_810 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_810);

uint32_t cps_811[] = {
0x1faa8, 0x1faa9, 0x1faaa, 0x1faab, 0x1faac, 0x1fab0, 0x1fab1, 0x1fab2, 0x1fab3, 0x1fab4, 0x1fab5, 0x1fab6, 0x1fab7, 0x1fab8, 0x1fab9, 0x1faba, 0x1fac0, 0x1fac1, 0x1fac2, 0x1fac3, 0x1fac4, 0x1fac5, 0x1fad0, 0x1fad1, 0x1fad2, 0x1fad3, 0x1fad4, 0x1fad5, 0x1fad6, 0x1fad7, 0x1fad8, 0x1fad9, 0x1fae0, 0x1fae1, 0x1fae2, 0x1fae3, 0x1fae4, 0x1fae5, 0x1fae6, 0x1fae7, 0x1faf0, 0x1faf1, 0x1faf2, 0x1faf3, 0x1faf4, 0x1faf5, 0x1faf6, 0x1fb00, 0x1fb01, 0x1fb02
};

void BM_collation_element_lookup_811(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 0, cps_811 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 1, cps_811 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 2, cps_811 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 3, cps_811 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 4, cps_811 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 5, cps_811 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 6, cps_811 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 7, cps_811 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 8, cps_811 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 9, cps_811 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 10, cps_811 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 11, cps_811 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 12, cps_811 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 13, cps_811 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 14, cps_811 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 15, cps_811 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 16, cps_811 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 17, cps_811 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 18, cps_811 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 19, cps_811 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 20, cps_811 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 21, cps_811 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 22, cps_811 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 23, cps_811 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 24, cps_811 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 25, cps_811 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 26, cps_811 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 27, cps_811 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 28, cps_811 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 29, cps_811 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 30, cps_811 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 31, cps_811 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 32, cps_811 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 33, cps_811 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 34, cps_811 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 35, cps_811 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 36, cps_811 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 37, cps_811 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 38, cps_811 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 39, cps_811 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 40, cps_811 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 41, cps_811 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 42, cps_811 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 43, cps_811 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 44, cps_811 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 45, cps_811 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 46, cps_811 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 47, cps_811 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 48, cps_811 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_811 + 49, cps_811 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_811);

uint32_t cps_812[] = {
0x1fb03, 0x1fb04, 0x1fb05, 0x1fb06, 0x1fb07, 0x1fb08, 0x1fb09, 0x1fb0a, 0x1fb0b, 0x1fb0c, 0x1fb0d, 0x1fb0e, 0x1fb0f, 0x1fb10, 0x1fb11, 0x1fb12, 0x1fb13, 0x1fb14, 0x1fb15, 0x1fb16, 0x1fb17, 0x1fb18, 0x1fb19, 0x1fb1a, 0x1fb1b, 0x1fb1c, 0x1fb1d, 0x1fb1e, 0x1fb1f, 0x1fb20, 0x1fb21, 0x1fb22, 0x1fb23, 0x1fb24, 0x1fb25, 0x1fb26, 0x1fb27, 0x1fb28, 0x1fb29, 0x1fb2a, 0x1fb2b, 0x1fb2c, 0x1fb2d, 0x1fb2e, 0x1fb2f, 0x1fb30, 0x1fb31, 0x1fb32, 0x1fb33, 0x1fb34
};

void BM_collation_element_lookup_812(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 0, cps_812 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 1, cps_812 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 2, cps_812 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 3, cps_812 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 4, cps_812 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 5, cps_812 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 6, cps_812 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 7, cps_812 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 8, cps_812 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 9, cps_812 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 10, cps_812 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 11, cps_812 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 12, cps_812 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 13, cps_812 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 14, cps_812 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 15, cps_812 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 16, cps_812 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 17, cps_812 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 18, cps_812 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 19, cps_812 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 20, cps_812 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 21, cps_812 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 22, cps_812 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 23, cps_812 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 24, cps_812 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 25, cps_812 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 26, cps_812 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 27, cps_812 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 28, cps_812 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 29, cps_812 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 30, cps_812 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 31, cps_812 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 32, cps_812 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 33, cps_812 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 34, cps_812 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 35, cps_812 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 36, cps_812 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 37, cps_812 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 38, cps_812 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 39, cps_812 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 40, cps_812 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 41, cps_812 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 42, cps_812 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 43, cps_812 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 44, cps_812 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 45, cps_812 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 46, cps_812 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 47, cps_812 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 48, cps_812 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_812 + 49, cps_812 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_812);

uint32_t cps_813[] = {
0x1fb35, 0x1fb36, 0x1fb37, 0x1fb38, 0x1fb39, 0x1fb3a, 0x1fb3b, 0x1fb3c, 0x1fb3d, 0x1fb3e, 0x1fb3f, 0x1fb40, 0x1fb41, 0x1fb42, 0x1fb43, 0x1fb44, 0x1fb45, 0x1fb46, 0x1fb47, 0x1fb48, 0x1fb49, 0x1fb4a, 0x1fb4b, 0x1fb4c, 0x1fb4d, 0x1fb4e, 0x1fb4f, 0x1fb50, 0x1fb51, 0x1fb52, 0x1fb53, 0x1fb54, 0x1fb55, 0x1fb56, 0x1fb57, 0x1fb58, 0x1fb59, 0x1fb5a, 0x1fb5b, 0x1fb5c, 0x1fb5d, 0x1fb5e, 0x1fb5f, 0x1fb60, 0x1fb61, 0x1fb62, 0x1fb63, 0x1fb64, 0x1fb65, 0x1fb66
};

void BM_collation_element_lookup_813(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 0, cps_813 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 1, cps_813 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 2, cps_813 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 3, cps_813 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 4, cps_813 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 5, cps_813 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 6, cps_813 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 7, cps_813 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 8, cps_813 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 9, cps_813 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 10, cps_813 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 11, cps_813 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 12, cps_813 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 13, cps_813 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 14, cps_813 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 15, cps_813 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 16, cps_813 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 17, cps_813 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 18, cps_813 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 19, cps_813 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 20, cps_813 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 21, cps_813 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 22, cps_813 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 23, cps_813 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 24, cps_813 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 25, cps_813 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 26, cps_813 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 27, cps_813 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 28, cps_813 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 29, cps_813 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 30, cps_813 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 31, cps_813 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 32, cps_813 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 33, cps_813 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 34, cps_813 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 35, cps_813 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 36, cps_813 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 37, cps_813 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 38, cps_813 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 39, cps_813 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 40, cps_813 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 41, cps_813 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 42, cps_813 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 43, cps_813 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 44, cps_813 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 45, cps_813 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 46, cps_813 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 47, cps_813 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 48, cps_813 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_813 + 49, cps_813 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_813);

uint32_t cps_814[] = {
0x1fb67, 0x1fb68, 0x1fb69, 0x1fb6a, 0x1fb6b, 0x1fb6c, 0x1fb6d, 0x1fb6e, 0x1fb6f, 0x1fb70, 0x1fb71, 0x1fb72, 0x1fb73, 0x1fb74, 0x1fb75, 0x1fb76, 0x1fb77, 0x1fb78, 0x1fb79, 0x1fb7a, 0x1fb7b, 0x1fb7c, 0x1fb7d, 0x1fb7e, 0x1fb7f, 0x1fb80, 0x1fb81, 0x1fb82, 0x1fb83, 0x1fb84, 0x1fb85, 0x1fb86, 0x1fb87, 0x1fb88, 0x1fb89, 0x1fb8a, 0x1fb8b, 0x1fb8c, 0x1fb8d, 0x1fb8e, 0x1fb8f, 0x1fb90, 0x1fb91, 0x1fb92, 0x1fb94, 0x1fb95, 0x1fb96, 0x1fb97, 0x1fb98, 0x1fb99
};

void BM_collation_element_lookup_814(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 0, cps_814 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 1, cps_814 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 2, cps_814 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 3, cps_814 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 4, cps_814 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 5, cps_814 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 6, cps_814 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 7, cps_814 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 8, cps_814 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 9, cps_814 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 10, cps_814 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 11, cps_814 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 12, cps_814 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 13, cps_814 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 14, cps_814 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 15, cps_814 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 16, cps_814 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 17, cps_814 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 18, cps_814 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 19, cps_814 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 20, cps_814 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 21, cps_814 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 22, cps_814 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 23, cps_814 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 24, cps_814 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 25, cps_814 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 26, cps_814 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 27, cps_814 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 28, cps_814 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 29, cps_814 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 30, cps_814 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 31, cps_814 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 32, cps_814 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 33, cps_814 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 34, cps_814 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 35, cps_814 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 36, cps_814 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 37, cps_814 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 38, cps_814 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 39, cps_814 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 40, cps_814 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 41, cps_814 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 42, cps_814 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 43, cps_814 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 44, cps_814 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 45, cps_814 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 46, cps_814 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 47, cps_814 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 48, cps_814 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_814 + 49, cps_814 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_814);

uint32_t cps_815[] = {
0x1fb9a, 0x1fb9b, 0x1fb9c, 0x1fb9d, 0x1fb9e, 0x1fb9f, 0x1fba0, 0x1fba1, 0x1fba2, 0x1fba3, 0x1fba4, 0x1fba5, 0x1fba6, 0x1fba7, 0x1fba8, 0x1fba9, 0x1fbaa, 0x1fbab, 0x1fbac, 0x1fbad, 0x1fbae, 0x1fbaf, 0x1fbb0, 0x1fbb1, 0x1fbb2, 0x1fbb3, 0x1fbb4, 0x1fbb5, 0x1fbb6, 0x1fbb7, 0x1fbb8, 0x1fbb9, 0x1fbba, 0x1fbbb, 0x1fbbc, 0x1fbbd, 0x1fbbe, 0x1fbbf, 0x1fbc0, 0x1fbc1, 0x1fbc2, 0x1fbc3, 0x1fbc4, 0x1fbc5, 0x1fbc6, 0x1fbc7, 0x1fbc8, 0x1fbc9, 0x1fbca, 0x1fbf0
};

void BM_collation_element_lookup_815(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 0, cps_815 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 1, cps_815 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 2, cps_815 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 3, cps_815 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 4, cps_815 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 5, cps_815 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 6, cps_815 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 7, cps_815 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 8, cps_815 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 9, cps_815 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 10, cps_815 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 11, cps_815 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 12, cps_815 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 13, cps_815 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 14, cps_815 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 15, cps_815 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 16, cps_815 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 17, cps_815 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 18, cps_815 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 19, cps_815 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 20, cps_815 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 21, cps_815 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 22, cps_815 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 23, cps_815 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 24, cps_815 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 25, cps_815 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 26, cps_815 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 27, cps_815 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 28, cps_815 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 29, cps_815 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 30, cps_815 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 31, cps_815 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 32, cps_815 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 33, cps_815 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 34, cps_815 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 35, cps_815 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 36, cps_815 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 37, cps_815 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 38, cps_815 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 39, cps_815 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 40, cps_815 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 41, cps_815 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 42, cps_815 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 43, cps_815 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 44, cps_815 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 45, cps_815 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 46, cps_815 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 47, cps_815 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 48, cps_815 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_815 + 49, cps_815 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_815);

uint32_t cps_816[] = {
0x1fbf1, 0x1fbf2, 0x1fbf3, 0x1fbf4, 0x1fbf5, 0x1fbf6, 0x1fbf7, 0x1fbf8, 0x1fbf9, 0x2f800, 0x2f801, 0x2f802, 0x2f803, 0x2f804, 0x2f805, 0x2f806, 0x2f807, 0x2f808, 0x2f809, 0x2f80a, 0x2f80b, 0x2f80c, 0x2f80d, 0x2f80e, 0x2f80f, 0x2f810, 0x2f811, 0x2f812, 0x2f813, 0x2f814, 0x2f815, 0x2f816, 0x2f817, 0x2f818, 0x2f819, 0x2f81a, 0x2f81b, 0x2f81c, 0x2f81d, 0x2f81e, 0x2f81f, 0x2f820, 0x2f821, 0x2f822, 0x2f823, 0x2f824, 0x2f825, 0x2f826, 0x2f827, 0x2f828
};

void BM_collation_element_lookup_816(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 0, cps_816 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 1, cps_816 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 2, cps_816 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 3, cps_816 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 4, cps_816 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 5, cps_816 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 6, cps_816 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 7, cps_816 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 8, cps_816 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 9, cps_816 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 10, cps_816 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 11, cps_816 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 12, cps_816 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 13, cps_816 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 14, cps_816 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 15, cps_816 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 16, cps_816 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 17, cps_816 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 18, cps_816 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 19, cps_816 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 20, cps_816 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 21, cps_816 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 22, cps_816 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 23, cps_816 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 24, cps_816 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 25, cps_816 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 26, cps_816 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 27, cps_816 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 28, cps_816 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 29, cps_816 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 30, cps_816 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 31, cps_816 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 32, cps_816 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 33, cps_816 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 34, cps_816 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 35, cps_816 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 36, cps_816 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 37, cps_816 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 38, cps_816 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 39, cps_816 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 40, cps_816 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 41, cps_816 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 42, cps_816 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 43, cps_816 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 44, cps_816 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 45, cps_816 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 46, cps_816 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 47, cps_816 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 48, cps_816 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_816 + 49, cps_816 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_816);

uint32_t cps_817[] = {
0x2f829, 0x2f82a, 0x2f82b, 0x2f82c, 0x2f82d, 0x2f82e, 0x2f82f, 0x2f830, 0x2f831, 0x2f832, 0x2f833, 0x2f834, 0x2f835, 0x2f836, 0x2f837, 0x2f838, 0x2f839, 0x2f83a, 0x2f83b, 0x2f83c, 0x2f83d, 0x2f83e, 0x2f83f, 0x2f840, 0x2f841, 0x2f842, 0x2f843, 0x2f844, 0x2f845, 0x2f846, 0x2f847, 0x2f848, 0x2f849, 0x2f84a, 0x2f84b, 0x2f84c, 0x2f84d, 0x2f84e, 0x2f84f, 0x2f850, 0x2f851, 0x2f852, 0x2f853, 0x2f854, 0x2f855, 0x2f856, 0x2f857, 0x2f858, 0x2f859, 0x2f85a
};

void BM_collation_element_lookup_817(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 0, cps_817 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 1, cps_817 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 2, cps_817 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 3, cps_817 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 4, cps_817 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 5, cps_817 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 6, cps_817 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 7, cps_817 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 8, cps_817 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 9, cps_817 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 10, cps_817 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 11, cps_817 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 12, cps_817 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 13, cps_817 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 14, cps_817 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 15, cps_817 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 16, cps_817 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 17, cps_817 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 18, cps_817 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 19, cps_817 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 20, cps_817 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 21, cps_817 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 22, cps_817 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 23, cps_817 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 24, cps_817 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 25, cps_817 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 26, cps_817 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 27, cps_817 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 28, cps_817 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 29, cps_817 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 30, cps_817 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 31, cps_817 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 32, cps_817 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 33, cps_817 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 34, cps_817 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 35, cps_817 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 36, cps_817 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 37, cps_817 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 38, cps_817 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 39, cps_817 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 40, cps_817 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 41, cps_817 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 42, cps_817 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 43, cps_817 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 44, cps_817 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 45, cps_817 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 46, cps_817 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 47, cps_817 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 48, cps_817 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_817 + 49, cps_817 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_817);

uint32_t cps_818[] = {
0x2f85b, 0x2f85c, 0x2f85d, 0x2f85e, 0x2f85f, 0x2f860, 0x2f861, 0x2f862, 0x2f863, 0x2f864, 0x2f865, 0x2f866, 0x2f867, 0x2f868, 0x2f869, 0x2f86a, 0x2f86b, 0x2f86c, 0x2f86d, 0x2f86e, 0x2f86f, 0x2f870, 0x2f871, 0x2f872, 0x2f873, 0x2f874, 0x2f875, 0x2f876, 0x2f877, 0x2f878, 0x2f879, 0x2f87a, 0x2f87b, 0x2f87c, 0x2f87d, 0x2f87e, 0x2f87f, 0x2f880, 0x2f881, 0x2f882, 0x2f883, 0x2f884, 0x2f885, 0x2f886, 0x2f887, 0x2f888, 0x2f889, 0x2f88a, 0x2f88b, 0x2f88c
};

void BM_collation_element_lookup_818(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 0, cps_818 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 1, cps_818 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 2, cps_818 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 3, cps_818 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 4, cps_818 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 5, cps_818 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 6, cps_818 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 7, cps_818 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 8, cps_818 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 9, cps_818 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 10, cps_818 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 11, cps_818 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 12, cps_818 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 13, cps_818 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 14, cps_818 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 15, cps_818 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 16, cps_818 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 17, cps_818 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 18, cps_818 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 19, cps_818 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 20, cps_818 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 21, cps_818 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 22, cps_818 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 23, cps_818 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 24, cps_818 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 25, cps_818 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 26, cps_818 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 27, cps_818 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 28, cps_818 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 29, cps_818 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 30, cps_818 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 31, cps_818 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 32, cps_818 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 33, cps_818 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 34, cps_818 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 35, cps_818 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 36, cps_818 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 37, cps_818 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 38, cps_818 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 39, cps_818 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 40, cps_818 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 41, cps_818 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 42, cps_818 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 43, cps_818 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 44, cps_818 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 45, cps_818 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 46, cps_818 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 47, cps_818 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 48, cps_818 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_818 + 49, cps_818 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_818);

uint32_t cps_819[] = {
0x2f88d, 0x2f88e, 0x2f88f, 0x2f890, 0x2f891, 0x2f892, 0x2f893, 0x2f894, 0x2f895, 0x2f896, 0x2f897, 0x2f898, 0x2f899, 0x2f89a, 0x2f89b, 0x2f89c, 0x2f89d, 0x2f89e, 0x2f89f, 0x2f8a0, 0x2f8a1, 0x2f8a2, 0x2f8a3, 0x2f8a4, 0x2f8a5, 0x2f8a6, 0x2f8a7, 0x2f8a8, 0x2f8a9, 0x2f8aa, 0x2f8ab, 0x2f8ac, 0x2f8ad, 0x2f8ae, 0x2f8af, 0x2f8b0, 0x2f8b1, 0x2f8b2, 0x2f8b3, 0x2f8b4, 0x2f8b5, 0x2f8b6, 0x2f8b7, 0x2f8b8, 0x2f8b9, 0x2f8ba, 0x2f8bb, 0x2f8bc, 0x2f8bd, 0x2f8be
};

void BM_collation_element_lookup_819(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 0, cps_819 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 1, cps_819 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 2, cps_819 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 3, cps_819 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 4, cps_819 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 5, cps_819 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 6, cps_819 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 7, cps_819 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 8, cps_819 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 9, cps_819 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 10, cps_819 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 11, cps_819 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 12, cps_819 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 13, cps_819 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 14, cps_819 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 15, cps_819 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 16, cps_819 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 17, cps_819 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 18, cps_819 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 19, cps_819 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 20, cps_819 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 21, cps_819 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 22, cps_819 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 23, cps_819 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 24, cps_819 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 25, cps_819 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 26, cps_819 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 27, cps_819 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 28, cps_819 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 29, cps_819 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 30, cps_819 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 31, cps_819 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 32, cps_819 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 33, cps_819 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 34, cps_819 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 35, cps_819 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 36, cps_819 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 37, cps_819 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 38, cps_819 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 39, cps_819 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 40, cps_819 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 41, cps_819 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 42, cps_819 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 43, cps_819 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 44, cps_819 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 45, cps_819 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 46, cps_819 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 47, cps_819 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 48, cps_819 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_819 + 49, cps_819 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_819);

uint32_t cps_820[] = {
0x2f8bf, 0x2f8c0, 0x2f8c1, 0x2f8c2, 0x2f8c3, 0x2f8c4, 0x2f8c5, 0x2f8c6, 0x2f8c7, 0x2f8c8, 0x2f8c9, 0x2f8ca, 0x2f8cb, 0x2f8cc, 0x2f8cd, 0x2f8ce, 0x2f8cf, 0x2f8d0, 0x2f8d1, 0x2f8d2, 0x2f8d3, 0x2f8d4, 0x2f8d5, 0x2f8d6, 0x2f8d7, 0x2f8d8, 0x2f8d9, 0x2f8da, 0x2f8db, 0x2f8dc, 0x2f8dd, 0x2f8de, 0x2f8df, 0x2f8e0, 0x2f8e1, 0x2f8e2, 0x2f8e3, 0x2f8e4, 0x2f8e5, 0x2f8e6, 0x2f8e7, 0x2f8e8, 0x2f8e9, 0x2f8ea, 0x2f8eb, 0x2f8ec, 0x2f8ed, 0x2f8ee, 0x2f8ef, 0x2f8f0
};

void BM_collation_element_lookup_820(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 0, cps_820 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 1, cps_820 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 2, cps_820 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 3, cps_820 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 4, cps_820 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 5, cps_820 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 6, cps_820 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 7, cps_820 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 8, cps_820 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 9, cps_820 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 10, cps_820 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 11, cps_820 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 12, cps_820 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 13, cps_820 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 14, cps_820 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 15, cps_820 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 16, cps_820 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 17, cps_820 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 18, cps_820 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 19, cps_820 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 20, cps_820 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 21, cps_820 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 22, cps_820 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 23, cps_820 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 24, cps_820 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 25, cps_820 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 26, cps_820 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 27, cps_820 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 28, cps_820 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 29, cps_820 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 30, cps_820 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 31, cps_820 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 32, cps_820 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 33, cps_820 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 34, cps_820 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 35, cps_820 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 36, cps_820 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 37, cps_820 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 38, cps_820 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 39, cps_820 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 40, cps_820 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 41, cps_820 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 42, cps_820 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 43, cps_820 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 44, cps_820 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 45, cps_820 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 46, cps_820 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 47, cps_820 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 48, cps_820 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_820 + 49, cps_820 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_820);

uint32_t cps_821[] = {
0x2f8f1, 0x2f8f2, 0x2f8f3, 0x2f8f4, 0x2f8f5, 0x2f8f6, 0x2f8f7, 0x2f8f8, 0x2f8f9, 0x2f8fa, 0x2f8fb, 0x2f8fc, 0x2f8fd, 0x2f8fe, 0x2f8ff, 0x2f900, 0x2f901, 0x2f902, 0x2f903, 0x2f904, 0x2f905, 0x2f906, 0x2f907, 0x2f908, 0x2f909, 0x2f90a, 0x2f90b, 0x2f90c, 0x2f90d, 0x2f90e, 0x2f90f, 0x2f910, 0x2f911, 0x2f912, 0x2f913, 0x2f914, 0x2f915, 0x2f916, 0x2f917, 0x2f918, 0x2f919, 0x2f91a, 0x2f91b, 0x2f91c, 0x2f91d, 0x2f91e, 0x2f91f, 0x2f920, 0x2f921, 0x2f922
};

void BM_collation_element_lookup_821(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 0, cps_821 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 1, cps_821 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 2, cps_821 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 3, cps_821 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 4, cps_821 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 5, cps_821 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 6, cps_821 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 7, cps_821 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 8, cps_821 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 9, cps_821 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 10, cps_821 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 11, cps_821 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 12, cps_821 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 13, cps_821 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 14, cps_821 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 15, cps_821 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 16, cps_821 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 17, cps_821 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 18, cps_821 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 19, cps_821 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 20, cps_821 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 21, cps_821 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 22, cps_821 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 23, cps_821 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 24, cps_821 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 25, cps_821 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 26, cps_821 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 27, cps_821 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 28, cps_821 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 29, cps_821 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 30, cps_821 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 31, cps_821 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 32, cps_821 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 33, cps_821 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 34, cps_821 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 35, cps_821 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 36, cps_821 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 37, cps_821 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 38, cps_821 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 39, cps_821 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 40, cps_821 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 41, cps_821 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 42, cps_821 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 43, cps_821 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 44, cps_821 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 45, cps_821 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 46, cps_821 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 47, cps_821 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 48, cps_821 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_821 + 49, cps_821 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_821);

uint32_t cps_822[] = {
0x2f923, 0x2f924, 0x2f925, 0x2f926, 0x2f927, 0x2f928, 0x2f929, 0x2f92a, 0x2f92b, 0x2f92c, 0x2f92d, 0x2f92e, 0x2f92f, 0x2f930, 0x2f931, 0x2f932, 0x2f933, 0x2f934, 0x2f935, 0x2f936, 0x2f937, 0x2f938, 0x2f939, 0x2f93a, 0x2f93b, 0x2f93c, 0x2f93d, 0x2f93e, 0x2f93f, 0x2f940, 0x2f941, 0x2f942, 0x2f943, 0x2f944, 0x2f945, 0x2f946, 0x2f947, 0x2f948, 0x2f949, 0x2f94a, 0x2f94b, 0x2f94c, 0x2f94d, 0x2f94e, 0x2f94f, 0x2f950, 0x2f951, 0x2f952, 0x2f953, 0x2f954
};

void BM_collation_element_lookup_822(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 0, cps_822 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 1, cps_822 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 2, cps_822 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 3, cps_822 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 4, cps_822 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 5, cps_822 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 6, cps_822 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 7, cps_822 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 8, cps_822 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 9, cps_822 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 10, cps_822 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 11, cps_822 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 12, cps_822 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 13, cps_822 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 14, cps_822 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 15, cps_822 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 16, cps_822 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 17, cps_822 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 18, cps_822 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 19, cps_822 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 20, cps_822 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 21, cps_822 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 22, cps_822 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 23, cps_822 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 24, cps_822 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 25, cps_822 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 26, cps_822 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 27, cps_822 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 28, cps_822 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 29, cps_822 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 30, cps_822 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 31, cps_822 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 32, cps_822 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 33, cps_822 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 34, cps_822 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 35, cps_822 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 36, cps_822 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 37, cps_822 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 38, cps_822 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 39, cps_822 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 40, cps_822 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 41, cps_822 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 42, cps_822 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 43, cps_822 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 44, cps_822 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 45, cps_822 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 46, cps_822 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 47, cps_822 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 48, cps_822 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_822 + 49, cps_822 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_822);

uint32_t cps_823[] = {
0x2f955, 0x2f956, 0x2f957, 0x2f958, 0x2f959, 0x2f95a, 0x2f95b, 0x2f95c, 0x2f95d, 0x2f95e, 0x2f95f, 0x2f960, 0x2f961, 0x2f962, 0x2f963, 0x2f964, 0x2f965, 0x2f966, 0x2f967, 0x2f968, 0x2f969, 0x2f96a, 0x2f96b, 0x2f96c, 0x2f96d, 0x2f96e, 0x2f96f, 0x2f970, 0x2f971, 0x2f972, 0x2f973, 0x2f974, 0x2f975, 0x2f976, 0x2f977, 0x2f978, 0x2f979, 0x2f97a, 0x2f97b, 0x2f97c, 0x2f97d, 0x2f97e, 0x2f97f, 0x2f980, 0x2f981, 0x2f982, 0x2f983, 0x2f984, 0x2f985, 0x2f986
};

void BM_collation_element_lookup_823(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 0, cps_823 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 1, cps_823 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 2, cps_823 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 3, cps_823 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 4, cps_823 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 5, cps_823 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 6, cps_823 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 7, cps_823 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 8, cps_823 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 9, cps_823 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 10, cps_823 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 11, cps_823 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 12, cps_823 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 13, cps_823 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 14, cps_823 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 15, cps_823 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 16, cps_823 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 17, cps_823 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 18, cps_823 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 19, cps_823 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 20, cps_823 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 21, cps_823 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 22, cps_823 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 23, cps_823 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 24, cps_823 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 25, cps_823 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 26, cps_823 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 27, cps_823 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 28, cps_823 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 29, cps_823 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 30, cps_823 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 31, cps_823 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 32, cps_823 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 33, cps_823 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 34, cps_823 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 35, cps_823 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 36, cps_823 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 37, cps_823 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 38, cps_823 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 39, cps_823 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 40, cps_823 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 41, cps_823 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 42, cps_823 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 43, cps_823 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 44, cps_823 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 45, cps_823 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 46, cps_823 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 47, cps_823 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 48, cps_823 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_823 + 49, cps_823 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_823);

uint32_t cps_824[] = {
0x2f987, 0x2f988, 0x2f989, 0x2f98a, 0x2f98b, 0x2f98c, 0x2f98d, 0x2f98e, 0x2f98f, 0x2f990, 0x2f991, 0x2f992, 0x2f993, 0x2f994, 0x2f995, 0x2f996, 0x2f997, 0x2f998, 0x2f999, 0x2f99a, 0x2f99b, 0x2f99c, 0x2f99d, 0x2f99e, 0x2f99f, 0x2f9a0, 0x2f9a1, 0x2f9a2, 0x2f9a3, 0x2f9a4, 0x2f9a5, 0x2f9a6, 0x2f9a7, 0x2f9a8, 0x2f9a9, 0x2f9aa, 0x2f9ab, 0x2f9ac, 0x2f9ad, 0x2f9ae, 0x2f9af, 0x2f9b0, 0x2f9b1, 0x2f9b2, 0x2f9b3, 0x2f9b4, 0x2f9b5, 0x2f9b6, 0x2f9b7, 0x2f9b8
};

void BM_collation_element_lookup_824(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 0, cps_824 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 1, cps_824 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 2, cps_824 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 3, cps_824 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 4, cps_824 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 5, cps_824 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 6, cps_824 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 7, cps_824 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 8, cps_824 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 9, cps_824 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 10, cps_824 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 11, cps_824 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 12, cps_824 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 13, cps_824 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 14, cps_824 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 15, cps_824 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 16, cps_824 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 17, cps_824 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 18, cps_824 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 19, cps_824 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 20, cps_824 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 21, cps_824 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 22, cps_824 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 23, cps_824 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 24, cps_824 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 25, cps_824 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 26, cps_824 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 27, cps_824 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 28, cps_824 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 29, cps_824 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 30, cps_824 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 31, cps_824 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 32, cps_824 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 33, cps_824 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 34, cps_824 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 35, cps_824 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 36, cps_824 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 37, cps_824 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 38, cps_824 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 39, cps_824 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 40, cps_824 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 41, cps_824 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 42, cps_824 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 43, cps_824 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 44, cps_824 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 45, cps_824 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 46, cps_824 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 47, cps_824 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 48, cps_824 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_824 + 49, cps_824 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_824);

uint32_t cps_825[] = {
0x2f9b9, 0x2f9ba, 0x2f9bb, 0x2f9bc, 0x2f9bd, 0x2f9be, 0x2f9bf, 0x2f9c0, 0x2f9c1, 0x2f9c2, 0x2f9c3, 0x2f9c4, 0x2f9c5, 0x2f9c6, 0x2f9c7, 0x2f9c8, 0x2f9c9, 0x2f9ca, 0x2f9cb, 0x2f9cc, 0x2f9cd, 0x2f9ce, 0x2f9cf, 0x2f9d0, 0x2f9d1, 0x2f9d2, 0x2f9d3, 0x2f9d4, 0x2f9d5, 0x2f9d6, 0x2f9d7, 0x2f9d8, 0x2f9d9, 0x2f9da, 0x2f9db, 0x2f9dc, 0x2f9dd, 0x2f9de, 0x2f9df, 0x2f9e0, 0x2f9e1, 0x2f9e2, 0x2f9e3, 0x2f9e4, 0x2f9e5, 0x2f9e6, 0x2f9e7, 0x2f9e8, 0x2f9e9, 0x2f9ea
};

void BM_collation_element_lookup_825(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 0, cps_825 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 1, cps_825 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 2, cps_825 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 3, cps_825 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 4, cps_825 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 5, cps_825 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 6, cps_825 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 7, cps_825 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 8, cps_825 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 9, cps_825 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 10, cps_825 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 11, cps_825 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 12, cps_825 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 13, cps_825 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 14, cps_825 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 15, cps_825 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 16, cps_825 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 17, cps_825 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 18, cps_825 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 19, cps_825 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 20, cps_825 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 21, cps_825 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 22, cps_825 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 23, cps_825 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 24, cps_825 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 25, cps_825 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 26, cps_825 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 27, cps_825 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 28, cps_825 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 29, cps_825 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 30, cps_825 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 31, cps_825 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 32, cps_825 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 33, cps_825 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 34, cps_825 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 35, cps_825 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 36, cps_825 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 37, cps_825 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 38, cps_825 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 39, cps_825 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 40, cps_825 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 41, cps_825 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 42, cps_825 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 43, cps_825 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 44, cps_825 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 45, cps_825 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 46, cps_825 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 47, cps_825 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 48, cps_825 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_825 + 49, cps_825 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_825);

uint32_t cps_826[] = {
0x2f9eb, 0x2f9ec, 0x2f9ed, 0x2f9ee, 0x2f9ef, 0x2f9f0, 0x2f9f1, 0x2f9f2, 0x2f9f3, 0x2f9f4, 0x2f9f5, 0x2f9f6, 0x2f9f7, 0x2f9f8, 0x2f9f9, 0x2f9fa, 0x2f9fb, 0x2f9fc, 0x2f9fd, 0x2f9fe, 0x2f9ff, 0x2fa00, 0x2fa01, 0x2fa02, 0x2fa03, 0x2fa04, 0x2fa05, 0x2fa06, 0x2fa07, 0x2fa08, 0x2fa09, 0x2fa0a, 0x2fa0b, 0x2fa0c, 0x2fa0d, 0x2fa0e, 0x2fa0f, 0x2fa10, 0x2fa11, 0x2fa12, 0x2fa13, 0x2fa14, 0x2fa15, 0x2fa16, 0x2fa17, 0x2fa18, 0x2fa19, 0x2fa1a, 0x2fa1b, 0x2fa1c
};

void BM_collation_element_lookup_826(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 0, cps_826 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 1, cps_826 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 2, cps_826 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 3, cps_826 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 4, cps_826 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 5, cps_826 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 6, cps_826 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 7, cps_826 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 8, cps_826 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 9, cps_826 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 10, cps_826 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 11, cps_826 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 12, cps_826 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 13, cps_826 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 14, cps_826 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 15, cps_826 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 16, cps_826 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 17, cps_826 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 18, cps_826 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 19, cps_826 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 20, cps_826 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 21, cps_826 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 22, cps_826 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 23, cps_826 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 24, cps_826 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 25, cps_826 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 26, cps_826 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 27, cps_826 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 28, cps_826 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 29, cps_826 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 30, cps_826 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 31, cps_826 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 32, cps_826 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 33, cps_826 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 34, cps_826 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 35, cps_826 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 36, cps_826 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 37, cps_826 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 38, cps_826 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 39, cps_826 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 40, cps_826 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 41, cps_826 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 42, cps_826 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 43, cps_826 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 44, cps_826 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 45, cps_826 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 46, cps_826 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 47, cps_826 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 48, cps_826 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_826 + 49, cps_826 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_826);

uint32_t cps_827[] = {
0x2fa1d, 0xe0001, 0xe0020, 0xe0021, 0xe0022, 0xe0023, 0xe0024, 0xe0025, 0xe0026, 0xe0027, 0xe0028, 0xe0029, 0xe002a, 0xe002b, 0xe002c, 0xe002d, 0xe002e, 0xe002f, 0xe0030, 0xe0031, 0xe0032, 0xe0033, 0xe0034, 0xe0035, 0xe0036, 0xe0037, 0xe0038, 0xe0039, 0xe003a, 0xe003b, 0xe003c, 0xe003d, 0xe003e, 0xe003f, 0xe0040, 0xe0041, 0xe0042, 0xe0043, 0xe0044, 0xe0045, 0xe0046, 0xe0047, 0xe0048, 0xe0049, 0xe004a, 0xe004b, 0xe004c, 0xe004d, 0xe004e, 0xe004f
};

void BM_collation_element_lookup_827(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 0, cps_827 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 1, cps_827 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 2, cps_827 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 3, cps_827 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 4, cps_827 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 5, cps_827 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 6, cps_827 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 7, cps_827 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 8, cps_827 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 9, cps_827 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 10, cps_827 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 11, cps_827 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 12, cps_827 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 13, cps_827 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 14, cps_827 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 15, cps_827 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 16, cps_827 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 17, cps_827 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 18, cps_827 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 19, cps_827 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 20, cps_827 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 21, cps_827 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 22, cps_827 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 23, cps_827 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 24, cps_827 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 25, cps_827 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 26, cps_827 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 27, cps_827 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 28, cps_827 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 29, cps_827 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 30, cps_827 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 31, cps_827 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 32, cps_827 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 33, cps_827 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 34, cps_827 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 35, cps_827 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 36, cps_827 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 37, cps_827 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 38, cps_827 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 39, cps_827 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 40, cps_827 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 41, cps_827 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 42, cps_827 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 43, cps_827 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 44, cps_827 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 45, cps_827 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 46, cps_827 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 47, cps_827 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 48, cps_827 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_827 + 49, cps_827 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_827);

uint32_t cps_828[] = {
0xe0050, 0xe0051, 0xe0052, 0xe0053, 0xe0054, 0xe0055, 0xe0056, 0xe0057, 0xe0058, 0xe0059, 0xe005a, 0xe005b, 0xe005c, 0xe005d, 0xe005e, 0xe005f, 0xe0060, 0xe0061, 0xe0062, 0xe0063, 0xe0064, 0xe0065, 0xe0066, 0xe0067, 0xe0068, 0xe0069, 0xe006a, 0xe006b, 0xe006c, 0xe006d, 0xe006e, 0xe006f, 0xe0070, 0xe0071, 0xe0072, 0xe0073, 0xe0074, 0xe0075, 0xe0076, 0xe0077, 0xe0078, 0xe0079, 0xe007a, 0xe007b, 0xe007c, 0xe007d, 0xe007e, 0xe007f, 0xe0100, 0xe0101
};

void BM_collation_element_lookup_828(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 0, cps_828 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 1, cps_828 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 2, cps_828 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 3, cps_828 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 4, cps_828 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 5, cps_828 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 6, cps_828 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 7, cps_828 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 8, cps_828 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 9, cps_828 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 10, cps_828 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 11, cps_828 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 12, cps_828 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 13, cps_828 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 14, cps_828 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 15, cps_828 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 16, cps_828 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 17, cps_828 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 18, cps_828 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 19, cps_828 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 20, cps_828 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 21, cps_828 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 22, cps_828 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 23, cps_828 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 24, cps_828 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 25, cps_828 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 26, cps_828 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 27, cps_828 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 28, cps_828 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 29, cps_828 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 30, cps_828 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 31, cps_828 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 32, cps_828 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 33, cps_828 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 34, cps_828 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 35, cps_828 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 36, cps_828 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 37, cps_828 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 38, cps_828 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 39, cps_828 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 40, cps_828 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 41, cps_828 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 42, cps_828 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 43, cps_828 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 44, cps_828 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 45, cps_828 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 46, cps_828 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 47, cps_828 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 48, cps_828 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_828 + 49, cps_828 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_828);

uint32_t cps_829[] = {
0xe0102, 0xe0103, 0xe0104, 0xe0105, 0xe0106, 0xe0107, 0xe0108, 0xe0109, 0xe010a, 0xe010b, 0xe010c, 0xe010d, 0xe010e, 0xe010f, 0xe0110, 0xe0111, 0xe0112, 0xe0113, 0xe0114, 0xe0115, 0xe0116, 0xe0117, 0xe0118, 0xe0119, 0xe011a, 0xe011b, 0xe011c, 0xe011d, 0xe011e, 0xe011f, 0xe0120, 0xe0121, 0xe0122, 0xe0123, 0xe0124, 0xe0125, 0xe0126, 0xe0127, 0xe0128, 0xe0129, 0xe012a, 0xe012b, 0xe012c, 0xe012d, 0xe012e, 0xe012f, 0xe0130, 0xe0131, 0xe0132, 0xe0133
};

void BM_collation_element_lookup_829(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 0, cps_829 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 1, cps_829 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 2, cps_829 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 3, cps_829 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 4, cps_829 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 5, cps_829 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 6, cps_829 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 7, cps_829 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 8, cps_829 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 9, cps_829 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 10, cps_829 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 11, cps_829 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 12, cps_829 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 13, cps_829 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 14, cps_829 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 15, cps_829 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 16, cps_829 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 17, cps_829 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 18, cps_829 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 19, cps_829 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 20, cps_829 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 21, cps_829 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 22, cps_829 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 23, cps_829 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 24, cps_829 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 25, cps_829 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 26, cps_829 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 27, cps_829 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 28, cps_829 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 29, cps_829 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 30, cps_829 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 31, cps_829 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 32, cps_829 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 33, cps_829 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 34, cps_829 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 35, cps_829 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 36, cps_829 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 37, cps_829 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 38, cps_829 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 39, cps_829 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 40, cps_829 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 41, cps_829 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 42, cps_829 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 43, cps_829 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 44, cps_829 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 45, cps_829 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 46, cps_829 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 47, cps_829 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 48, cps_829 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_829 + 49, cps_829 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_829);

uint32_t cps_830[] = {
0xe0134, 0xe0135, 0xe0136, 0xe0137, 0xe0138, 0xe0139, 0xe013a, 0xe013b, 0xe013c, 0xe013d, 0xe013e, 0xe013f, 0xe0140, 0xe0141, 0xe0142, 0xe0143, 0xe0144, 0xe0145, 0xe0146, 0xe0147, 0xe0148, 0xe0149, 0xe014a, 0xe014b, 0xe014c, 0xe014d, 0xe014e, 0xe014f, 0xe0150, 0xe0151, 0xe0152, 0xe0153, 0xe0154, 0xe0155, 0xe0156, 0xe0157, 0xe0158, 0xe0159, 0xe015a, 0xe015b, 0xe015c, 0xe015d, 0xe015e, 0xe015f, 0xe0160, 0xe0161, 0xe0162, 0xe0163, 0xe0164, 0xe0165
};

void BM_collation_element_lookup_830(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 0, cps_830 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 1, cps_830 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 2, cps_830 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 3, cps_830 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 4, cps_830 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 5, cps_830 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 6, cps_830 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 7, cps_830 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 8, cps_830 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 9, cps_830 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 10, cps_830 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 11, cps_830 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 12, cps_830 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 13, cps_830 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 14, cps_830 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 15, cps_830 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 16, cps_830 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 17, cps_830 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 18, cps_830 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 19, cps_830 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 20, cps_830 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 21, cps_830 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 22, cps_830 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 23, cps_830 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 24, cps_830 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 25, cps_830 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 26, cps_830 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 27, cps_830 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 28, cps_830 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 29, cps_830 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 30, cps_830 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 31, cps_830 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 32, cps_830 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 33, cps_830 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 34, cps_830 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 35, cps_830 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 36, cps_830 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 37, cps_830 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 38, cps_830 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 39, cps_830 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 40, cps_830 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 41, cps_830 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 42, cps_830 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 43, cps_830 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 44, cps_830 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 45, cps_830 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 46, cps_830 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 47, cps_830 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 48, cps_830 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_830 + 49, cps_830 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_830);

uint32_t cps_831[] = {
0xe0166, 0xe0167, 0xe0168, 0xe0169, 0xe016a, 0xe016b, 0xe016c, 0xe016d, 0xe016e, 0xe016f, 0xe0170, 0xe0171, 0xe0172, 0xe0173, 0xe0174, 0xe0175, 0xe0176, 0xe0177, 0xe0178, 0xe0179, 0xe017a, 0xe017b, 0xe017c, 0xe017d, 0xe017e, 0xe017f, 0xe0180, 0xe0181, 0xe0182, 0xe0183, 0xe0184, 0xe0185, 0xe0186, 0xe0187, 0xe0188, 0xe0189, 0xe018a, 0xe018b, 0xe018c, 0xe018d, 0xe018e, 0xe018f, 0xe0190, 0xe0191, 0xe0192, 0xe0193, 0xe0194, 0xe0195, 0xe0196, 0xe0197
};

void BM_collation_element_lookup_831(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 0, cps_831 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 1, cps_831 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 2, cps_831 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 3, cps_831 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 4, cps_831 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 5, cps_831 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 6, cps_831 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 7, cps_831 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 8, cps_831 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 9, cps_831 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 10, cps_831 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 11, cps_831 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 12, cps_831 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 13, cps_831 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 14, cps_831 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 15, cps_831 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 16, cps_831 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 17, cps_831 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 18, cps_831 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 19, cps_831 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 20, cps_831 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 21, cps_831 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 22, cps_831 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 23, cps_831 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 24, cps_831 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 25, cps_831 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 26, cps_831 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 27, cps_831 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 28, cps_831 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 29, cps_831 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 30, cps_831 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 31, cps_831 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 32, cps_831 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 33, cps_831 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 34, cps_831 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 35, cps_831 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 36, cps_831 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 37, cps_831 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 38, cps_831 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 39, cps_831 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 40, cps_831 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 41, cps_831 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 42, cps_831 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 43, cps_831 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 44, cps_831 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 45, cps_831 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 46, cps_831 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 47, cps_831 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 48, cps_831 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_831 + 49, cps_831 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_831);

uint32_t cps_832[] = {
0xe0198, 0xe0199, 0xe019a, 0xe019b, 0xe019c, 0xe019d, 0xe019e, 0xe019f, 0xe01a0, 0xe01a1, 0xe01a2, 0xe01a3, 0xe01a4, 0xe01a5, 0xe01a6, 0xe01a7, 0xe01a8, 0xe01a9, 0xe01aa, 0xe01ab, 0xe01ac, 0xe01ad, 0xe01ae, 0xe01af, 0xe01b0, 0xe01b1, 0xe01b2, 0xe01b3, 0xe01b4, 0xe01b5, 0xe01b6, 0xe01b7, 0xe01b8, 0xe01b9, 0xe01ba, 0xe01bb, 0xe01bc, 0xe01bd, 0xe01be, 0xe01bf, 0xe01c0, 0xe01c1, 0xe01c2, 0xe01c3, 0xe01c4, 0xe01c5, 0xe01c6, 0xe01c7, 0xe01c8, 0xe01c9
};

void BM_collation_element_lookup_832(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 0, cps_832 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 1, cps_832 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 2, cps_832 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 3, cps_832 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 4, cps_832 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 5, cps_832 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 6, cps_832 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 7, cps_832 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 8, cps_832 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 9, cps_832 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 10, cps_832 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 11, cps_832 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 12, cps_832 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 13, cps_832 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 14, cps_832 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 15, cps_832 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 16, cps_832 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 17, cps_832 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 18, cps_832 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 19, cps_832 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 20, cps_832 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 21, cps_832 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 22, cps_832 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 23, cps_832 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 24, cps_832 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 25, cps_832 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 26, cps_832 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 27, cps_832 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 28, cps_832 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 29, cps_832 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 30, cps_832 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 31, cps_832 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 32, cps_832 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 33, cps_832 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 34, cps_832 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 35, cps_832 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 36, cps_832 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 37, cps_832 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 38, cps_832 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 39, cps_832 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 40, cps_832 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 41, cps_832 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 42, cps_832 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 43, cps_832 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 44, cps_832 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 45, cps_832 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 46, cps_832 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 47, cps_832 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 48, cps_832 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_832 + 49, cps_832 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_832);



BENCHMARK_MAIN()
