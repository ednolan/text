// Copyright (C) 2020 T. Zachary Laine
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

// Warning! This file is autogenerated.
#include "collation_tests.hpp"

#include <algorithm>

#include <gtest/gtest.h>


std::array<uint32_t, 3504> const g_cps = {{
0xF9E8, 0x0041, 0xF9E8, 0x0062, 0xF912, 0x0021, 0xF912, 0x003F, 0xF912, 0x0061, 0xF912, 0x0041, 0xF912, 0x0062, 0x2F9C9, 0x0021, 0x2F9C9, 0x003F, 0x2F9C9, 0x0061, 0x2F9C9, 0x0041, 0x2F9C9, 0x0062, 0xFA60, 0x0021, 0xFA60, 0x003F, 0xFA60, 0x0061, 0xFA60, 0x0041, 0xFA60, 0x0062, 0xFAB6, 0x0021, 0xFAB6, 0x003F, 0xFAB6, 0x0061, 0xFAB6, 0x0041, 0xFAB6, 0x0062, 0xF924, 0x0021, 0xF924, 0x003F, 0xF924, 0x0061, 0xF924, 0x0041, 0xF924, 0x0062, 0x2F91, 0x0021, 0x2F91, 0x003F, 0x2F91, 0x0061, 0x2F91, 0x0041, 0x2F91, 0x0062, 0x2EC4, 0x0021, 0x2EC4, 0x003F, 0x2EC4, 0x0061, 0x2EC4, 0x0041, 0x2EC4, 0x0062, 0x2EC3, 0x0021, 0x2EC3, 0x003F, 0x2EC3, 0x0061, 0x2EC3, 0x0041, 0x2EC3, 0x0062, 0xFAB7, 0x0021, 0xFAB7, 0x003F, 0xFAB7, 0x0061, 0xFAB7, 0x0041, 0xFAB7, 0x0062, 0xFA0A, 0x0021, 0x2F92, 0x0021, 0xFA0A, 0x003F, 0x2F92, 0x003F, 0xFA0A, 0x0061, 0xFA0A, 0x0041, 0x2F92, 0x0061, 0x2F92, 0x0041, 0xFA0A, 0x0062, 0x2F92, 0x0062, 0x2EC5, 0x0021, 0x2EC5, 0x003F, 0x2EC5, 0x0061, 0x2EC5, 0x0041, 0x2EC5, 0x0062, 0x2EC6, 0x0021, 0x2F93, 0x0021, 0x2EC7, 0x0021, 0x2EC6, 0x003F, 0x2F93, 0x003F, 0x2EC7, 0x003F, 0x2EC6, 0x0061, 0x2F93, 0x0061, 0x2EC6, 0x0041, 0x2F93, 0x0041, 0x2EC7, 0x0061, 0x2EC7, 0x0041, 0x2EC6, 0x0062, 0x2F93, 0x0062, 0x2EC7, 0x0062, 0x1F216, 0x0021, 0x1F216, 0x003F, 0x1F216, 0x0061, 0x1F216, 0x0041, 0x1F216, 0x0062, 0x2F94, 0x0021, 0x2F94, 0x003F, 0x2F94, 0x0061, 0x2F94, 0x0041, 0x2F94, 0x0062, 0xF96F, 0x0021, 0xF9A1, 0x0021, 0xF96F, 0x003F, 0xF9A1, 0x003F, 0xF96F, 0x0061, 0xF9A1, 0x0061, 0xF96F, 0x0041, 0xF9A1, 0x0041, 0xF96F, 0x0062, 0xF9A1, 0x0062, 0xFAB9, 0x0021, 0xFAB9, 0x003F, 0xFAB9, 0x0061, 0xFAB9, 0x0041, 0xFAB9, 0x0062, 0xFABB, 0x0021, 0xFABB, 0x003F, 0xFABB, 0x0061, 0xFABB, 0x0041, 0xFABB, 0x0062, 0xF97D, 0x0021, 0xF97D, 0x003F, 0xF97D, 0x0061, 0xF97D, 0x0041, 0xF97D, 0x0062, 0xF941, 0x0021, 0xF941, 0x003F, 0xF941, 0x0061, 0xF941, 0x0041, 0xF941, 0x0062, 0xFABE, 0x0021, 0x2F9D0, 0x0021, 0xFABE, 0x003F, 0x2F9D0, 0x003F, 0xFABE, 0x0061, 0x2F9D0, 0x0061, 0xFABE, 0x0041, 0x2F9D0, 0x0041, 0xFABE, 0x0062, 0x2F9D0, 0x0062, 0xFA22, 0x0021, 0xFABA, 0x0021, 0xFA22, 0x003F, 0xFABA, 0x003F, 0xFA22, 0x0061, 0xFABA, 0x0061, 0xFA22, 0x0041, 0xFABA, 0x0041, 0xFA22, 0x0062, 0xFABA, 0x0062, 0xF95D, 0x0021, 0xFABD, 0x0021, 0xF95D, 0x003F, 0xFABD, 0x003F, 0xF95D, 0x0061, 0xFABD, 0x0061, 0xF95D, 0x0041, 0xFABD, 0x0041, 0xF95D, 0x0062, 0xFABD, 0x0062, 0xFA62, 0x0021, 0xFABC, 0x0021, 0xFA62, 0x003F, 0xFABC, 0x003F, 0xFA62, 0x0061, 0xFABC, 0x0061, 0xFA62, 0x0041, 0xFABC, 0x0041, 0xFA62, 0x0062, 0xFABC, 0x0062, 0xFA63, 0x0021, 0xFABF, 0x0021, 0xFA63, 0x003F, 0xFABF, 0x003F, 0xFA63, 0x0061, 0xFABF, 0x0061, 0xFA63, 0x0041, 0xFABF, 0x0041, 0xFA63, 0x0062, 0xFABF, 0x0062, 0xF9FC, 0x0021, 0xF9FC, 0x003F, 0xF9FC, 0x0061, 0xF9FC, 0x0041, 0xF9FC, 0x0062, 0xF95A, 0x0021, 0xF95A, 0x003F, 0xF95A, 0x0061, 0xF95A, 0x0041, 0xF95A, 0x0062, 0xFAC0, 0x0021, 0x2F9D1, 0x0021, 0xFAC0, 0x003F, 0x2F9D1, 0x003F, 0xFAC0, 0x0061, 0x2F9D1, 0x0061, 0xFAC0, 0x0041, 0x2F9D1, 0x0041, 0xFAC0, 0x0062, 0x2F9D1, 0x0062, 0x2EC8, 0x0021, 0x2EC8, 0x003F, 0x2EC8, 0x0061, 0x2EC8, 0x0041, 0x2EC8, 0x0062, 0x2F95, 0x0021, 0x2F95, 0x003F, 0x2F95, 0x0061, 0x2F95, 0x0041, 0x2F95, 0x0062, 0x2F96, 0x0021, 0x2F96, 0x003F, 0x2F96, 0x0061, 0x2F96, 0x0041, 0x2F96, 0x0062, 0xF900, 0x0021, 0xF900, 0x003F, 0xF900, 0x0061, 0xF900, 0x0041, 0xF900, 0x0062, 0x2F9D2, 0x0021, 0x2F97, 0x0021, 0x2F9D2, 0x003F, 0x2F97, 0x003F, 0x2F9D2, 0x0061, 0x2F9D2, 0x0041, 0x2F97, 0x0061, 0x2F97, 0x0041, 0x2F9D2, 0x0062, 0x2F97, 0x0062, 0x2F98, 0x0021, 0x2F98, 0x003F, 0x2F98, 0x0061, 0x2F98, 0x0041, 0x2F98, 0x0062, 0x2F99, 0x0021, 0x2F99, 0x003F, 0x2F99, 0x0061, 0x2F99, 0x0041, 0x2F99, 0x0062, 0x3296, 0x0021, 0x3296, 0x003F, 0x3296, 0x0061, 0x3296, 0x0041, 0x3296, 0x0062, 0x1F223, 0x0021, 0x1F223, 0x003F, 0x1F223, 0x0061, 0x1F223, 0x0041, 0x1F223, 0x0062, 0x2F9D4, 0x0021, 0x2F9D4, 0x003F, 0x2F9D4, 0x0061, 0x2F9D4, 0x0041, 0x2F9D4, 0x0062, 0x2F9D5, 0x0021, 0x2F9D5, 0x003F, 0x2F9D5, 0x0061, 0x2F9D5, 0x0041, 0x2F9D5, 0x0062, 0xF948, 0x0021, 0xF948, 0x003F, 0xF948, 0x0061, 0xF948, 0x0041, 0xF948, 0x0062, 0x32AE, 0x0021, 0x32AE, 0x003F, 0x32AE, 0x0061, 0x32AE, 0x0041, 0x32AE, 0x0062, 0xF903, 0x0021, 0xF903, 0x003F, 0xF903, 0x0061, 0xF903, 0x0041, 0xF903, 0x0062, 0xFA64, 0x0021, 0xFA64, 0x003F, 0xFA64, 0x0061, 0xFA64, 0x0041, 0xFA64, 0x0062, 0xFA65, 0x0021, 0xFAC1, 0x0021, 0xFA65, 0x003F, 0xFAC1, 0x003F, 0xFA65, 0x0061, 0xFAC1, 0x0061, 0xFA65, 0x0041, 0xFAC1, 0x0041, 0xFA65, 0x0062, 0xFAC1, 0x0062, 0x2F9D6, 0x0021, 0x2F9D6, 0x003F, 0x2F9D6, 0x0061, 0x2F9D6, 0x0041, 0x2F9D6, 0x0062, 0x2EC9, 0x0021, 0x2EC9, 0x003F, 0x2EC9, 0x0061, 0x2EC9, 0x0041, 0x2EC9, 0x0062, 0x2F9A, 0x0021, 0x2F9A, 0x003F, 0x2F9A, 0x0061, 0x2F9A, 0x0041, 0x2F9A, 0x0062, 0x2F9B, 0x0021, 0x1F230, 0x0021, 0x2F9B, 0x003F, 0x1F230, 0x003F, 0x2F9B, 0x0061, 0x2F9B, 0x0041, 0x1F230, 0x0061, 0x1F230, 0x0041, 0x2F9B, 0x0062, 0x1F230, 0x0062, 0x2F9D7, 0x0021, 0x2F9D7, 0x003F, 0x2F9D7, 0x0061, 0x2F9D7, 0x0041, 0x2F9D7, 0x0062, 0x2F9C, 0x0021, 0x2ECA, 0x0021, 0x2F9C, 0x003F, 0x2ECA, 0x003F, 0x2F9C, 0x0061, 0x2F9C, 0x0041, 0x2ECA, 0x0061, 0x2ECA, 0x0041, 0x2F9C, 0x0062, 0x2ECA, 0x0062, 0x2F9DA, 0x0021, 0x2F9DA, 0x003F, 0x2F9DA, 0x0061, 0x2F9DA, 0x0041, 0x2F9DA, 0x0062, 0xF937, 0x0021, 0xF937, 0x003F, 0xF937, 0x0061, 0xF937, 0x0041, 0xF937, 0x0062, 0x2F9DC, 0x0021, 0x2F9DC, 0x003F, 0x2F9DC, 0x0061, 0x2F9DC, 0x0041, 0x2F9DC, 0x0062, 0x2F9D, 0x0021, 0x2F9D, 0x003F, 0x2F9D, 0x0061, 0x2F9D, 0x0041, 0x2F9D, 0x0062, 0xF902, 0x0021, 0x2F9E, 0x0021, 0xF902, 0x003F, 0x2F9E, 0x003F, 0xF902, 0x0061, 0xF902, 0x0041, 0x2F9E, 0x0061, 0x2F9E, 0x0041, 0xF902, 0x0062, 0x2F9E, 0x0062, 0x2F9DE, 0x0021, 0x2F9DE, 0x003F, 0x2F9DE, 0x0061, 0x2F9DE, 0x0041, 0x2F9DE, 0x0062, 0xF998, 0x0021, 0xF998, 0x003F, 0xF998, 0x0061, 0xF998, 0x0041, 0xF998, 0x0062, 0xF9D7, 0x0021, 0xF9D7, 0x003F, 0xF9D7, 0x0061, 0xF9D7, 0x0041, 0xF9D7, 0x0062, 0xFAC2, 0x0021, 0x2F9DF, 0x0021, 0xFAC2, 0x003F, 0x2F9DF, 0x003F, 0xFAC2, 0x0061, 0x2F9DF, 0x0061, 0xFAC2, 0x0041, 0x2F9DF, 0x0041, 0xFAC2, 0x0062, 0x2F9DF, 0x0062, 0xFA07, 0x0021, 0xFA07, 0x003F, 0xFA07, 0x0061, 0xFA07, 0x0041, 0xFA07, 0x0062, 0xF98D, 0x0021, 0xF98D, 0x003F, 0xF98D, 0x0061, 0xF98D, 0x0041, 0xF98D, 0x0062, 0x2ECB, 0x0021, 0x2ECB, 0x003F, 0x2ECB, 0x0061, 0x2ECB, 0x0041, 0x2ECB, 0x0062, 0x2F9F, 0x0021, 0x2F9F, 0x003F, 0x2F9F, 0x0061, 0x2F9F, 0x0041, 0x2F9F, 0x0062, 0x2F98D, 0x0021, 0x2F98D, 0x003F, 0x2F98D, 0x0061, 0x2F98D, 0x0041, 0x2F98D, 0x0062, 0xF971, 0x0021, 0x2FA0, 0x0021, 0xF971, 0x003F, 0x2FA0, 0x003F, 0xF971, 0x0061, 0xF971, 0x0041, 0x2FA0, 0x0061, 0x2FA0, 0x0041, 0xF971, 0x0062, 0x2FA0, 0x0062, 0x2FA1, 0x0021, 0x2FA1, 0x003F, 0x2FA1, 0x0061, 0x2FA1, 0x0041, 0x2FA1, 0x0062, 0xFA66, 0x0021, 0x2ECC, 0x0021, 0x2ECD, 0x0021, 0x2ECE, 0x0021, 0xFA66, 0x003F, 0x2ECC, 0x003F, 0x2ECD, 0x003F, 0x2ECE, 0x003F, 0xFA66, 0x0061, 0xFA66, 0x0041, 0x2ECC, 0x0061, 0x2ECC, 0x0041, 0x2ECD, 0x0061, 0x2ECD, 0x0041, 0x2ECE, 0x0061, 0x2ECE, 0x0041, 0xFA66, 0x0062, 0x2ECC, 0x0062, 0x2ECD, 0x0062, 0x2ECE, 0x0062, 0xF99A, 0x0021, 0xF99A, 0x003F, 0xF99A, 0x0061, 0xF99A, 0x0041, 0xF99A, 0x0062, 0xFA25, 0x0021, 0xFA67, 0x0021, 0xFA25, 0x003F, 0xFA67, 0x003F, 0xFA25, 0x0061, 0xFA67, 0x0061, 0xFA25, 0x0041, 0xFA67, 0x0041, 0xFA25, 0x0062, 0xFA67, 0x0062, 0x1F22B, 0x0021, 0x1F22B, 0x003F, 0x1F22B, 0x0061, 0x1F22B, 0x0041, 0x1F22B, 0x0062, 0x329C, 0x0021, 0x329C, 0x003F, 0x329C, 0x0061, 0x329C, 0x0041, 0x329C, 0x0062, 0xF9C3, 0x0021, 0xF9C3, 0x003F, 0xF9C3, 0x0061, 0xF9C3, 0x0041, 0xF9C3, 0x0062, 0xF913, 0x0021, 0xF913, 0x003F, 0xF913, 0x0061, 0xF913, 0x0041, 0xF913, 0x0062, 0x2FA2, 0x0021, 0x2ECF, 0x0021, 0x2FA2, 0x003F, 0x2ECF, 0x003F, 0x2FA2, 0x0061, 0x2FA2, 0x0041, 0x2ECF, 0x0061, 0x2ECF, 0x0041, 0x2FA2, 0x0062, 0x2ECF, 0x0062, 0x2F9E2, 0x0021, 0x2F9E2, 0x003F, 0x2F9E2, 0x0061, 0x2F9E2, 0x0041, 0x2F9E2, 0x0062, 0xF92C, 0x0021, 0xF92C, 0x003F, 0xF92C, 0x0061, 0xF92C, 0x0041, 0xF92C, 0x0062, 0xFA2E, 0x0021, 0xFA2E, 0x003F, 0xFA2E, 0x0061, 0xFA2E, 0x0041, 0xFA2E, 0x0062, 0x2F9E3, 0x0021, 0x2F9E3, 0x003F, 0x2F9E3, 0x0061, 0x2F9E3, 0x0041, 0x2F9E3, 0x0062, 0xFA26, 0x0021, 0xFA26, 0x003F, 0xFA26, 0x0061, 0xFA26, 0x0041, 0xFA26, 0x0062, 0x2F9E4, 0x0021, 0x2F9E4, 0x003F, 0x2F9E4, 0x0061, 0x2F9E4, 0x0041, 0x2F9E4, 0x0062, 0x2F9E6, 0x0021, 0x2F9E6, 0x003F, 0x2F9E6, 0x0061, 0x2F9E6, 0x0041, 0x2F9E6, 0x0062, 0x2FA3, 0x0021, 0x2FA3, 0x003F, 0x2FA3, 0x0061, 0x2FA3, 0x0041, 0x2FA3, 0x0062, 0x1F23B, 0x0021, 0x1F23B, 0x003F, 0x1F23B, 0x0061, 0x1F23B, 0x0041, 0x1F23B, 0x0062, 0xF919, 0x0021, 0xF919, 0x003F, 0xF919, 0x0061, 0xF919, 0x0041, 0xF919, 0x0062, 0xFAC4, 0x0021, 0xFAC4, 0x003F, 0xFAC4, 0x0061, 0xFAC4, 0x0041, 0xFAC4, 0x0062, 0xF9B7, 0x0021, 0xF9B7, 0x003F, 0xF9B7, 0x0061, 0xF9B7, 0x0041, 0xF9B7, 0x0062, 0x2FA4, 0x0021, 0x2FA4, 0x003F, 0x2FA4, 0x0061, 0x2FA4, 0x0041, 0x2FA4, 0x0062, 0xF9E9, 0x0021, 0x2FA5, 0x0021, 0xF9E9, 0x003F, 0x2FA5, 0x003F, 0xF9E9, 0x0061, 0xF9E9, 0x0041, 0x2FA5, 0x0061, 0x2FA5, 0x0041, 0xF9E9, 0x0062, 0x2FA5, 0x0062, 0xF97E, 0x0021, 0xF97E, 0x003F, 0xF97E, 0x0061, 0xF97E, 0x0041, 0xF97E, 0x0062, 0xF90A, 0x0021, 0x2FA6, 0x0021, 0x328E, 0x0021, 0xF90A, 0x003F, 0x2FA6, 0x003F, 0x328E, 0x003F, 0xF90A, 0x0061, 0xF90A, 0x0041, 0x2FA6, 0x0061, 0x2FA6, 0x0041, 0x328E, 0x0061, 0x328E, 0x0041, 0xF90A, 0x0062, 0x2FA6, 0x0062, 0x328E, 0x0062, 0xF9B1, 0x0021, 0xF9B1, 0x003F, 0xF9B1, 0x0061, 0xF9B1, 0x0041, 0xF9B1, 0x0062, 0x2F9E7, 0x0021, 0x2F9E7, 0x003F, 0x2F9E7, 0x0061, 0x2F9E7, 0x0041, 0x2F9E7, 0x0062, 0xFAC5, 0x0021, 0xFAC5, 0x003F, 0xFAC5, 0x0061, 0xFAC5, 0x0041, 0xFAC5, 0x0062, 0x2F9E8, 0x0021, 0x2F9E8, 0x003F, 0x2F9E8, 0x0061, 0x2F9E8, 0x0041, 0x2F9E8, 0x0062, 0x2F9E9, 0x0021, 0x2F9E9, 0x003F, 0x2F9E9, 0x0061, 0x2F9E9, 0x0041, 0x2F9E9, 0x0062, 0xF93F, 0x0021, 0xF93F, 0x003F, 0xF93F, 0x0061, 0xF93F, 0x0041, 0xF93F, 0x0062, 0xF99B, 0x0021, 0xF99B, 0x003F, 0xF99B, 0x0061, 0xF99B, 0x0041, 0xF99B, 0x0062, 0x2F9EC, 0x0021, 0x2F9EC, 0x003F, 0x2F9EC, 0x0061, 0x2F9EC, 0x0041, 0x2F9EC, 0x0062, 0x2ED0, 0x0021, 0x2ED0, 0x003F, 0x2ED0, 0x0061, 0x2ED0, 0x0041, 0x2ED0, 0x0062, 0x2ED1, 0x0021, 0x2FA7, 0x0021, 0x2ED1, 0x003F, 0x2FA7, 0x003F, 0x2ED1, 0x0061, 0x2FA7, 0x0061, 0x2ED1, 0x0041, 0x2FA7, 0x0041, 0x2ED1, 0x0062, 0x2FA7, 0x0062, 0x2ED2, 0x0021, 0x2ED2, 0x003F, 0x2ED2, 0x0061, 0x2ED2, 0x0041, 0x2ED2, 0x0062, 0x2ED3, 0x0021, 0x2ED3, 0x003F, 0x2ED3, 0x0061, 0x2ED3, 0x0041, 0x2ED3, 0x0062, 0x2FA8, 0x0021, 0x2FA8, 0x003F, 0x2FA8, 0x0061, 0x2FA8, 0x0041, 0x2FA8, 0x0062, 0x2F9EE, 0x0021, 0x2F9EE, 0x003F, 0x2F9EE, 0x0061, 0x2F9EE, 0x0041, 0x2F9EE, 0x0062, 0xF986, 0x0021, 0xF986, 0x003F, 0xF986, 0x0061, 0xF986, 0x0041, 0xF986, 0x0062, 0x2ED4, 0x0021, 0x2ED4, 0x003F, 0x2ED4, 0x0061, 0x2ED4, 0x0041, 0x2ED4, 0x0062, 0x2FA9, 0x0021, 0x2ED5, 0x0021, 0x2FA9, 0x003F, 0x2ED5, 0x003F, 0x2FA9, 0x0061, 0x2FA9, 0x0041, 0x2ED5, 0x0061, 0x2ED5, 0x0041, 0x2FA9, 0x0062, 0x2ED5, 0x0062, 0x2ED6, 0x0021, 0x2ED6, 0x003F, 0x2ED6, 0x0061, 0x2ED6, 0x0041, 0x2ED6, 0x0062, 0xF9C6, 0x0021, 0xF9C6, 0x003F, 0xF9C6, 0x0061, 0xF9C6, 0x0041, 0xF9C6, 0x0062, 0xF951, 0x0021, 0xF951, 0x003F, 0xF951, 0x0061, 0xF951, 0x0041, 0xF951, 0x0062, 0xFA09, 0x0021, 0xFA09, 0x003F, 0xFA09, 0x0061, 0xFA09, 0x0041, 0xFA09, 0x0062, 0xF959, 0x0021, 0xF959, 0x003F, 0xF959, 0x0061, 0xF959, 0x0041, 0xF959, 0x0062, 0xF9D3, 0x0021, 0xF9D3, 0x003F, 0xF9D3, 0x0061, 0xF9D3, 0x0041, 0xF9D3, 0x0062, 0xFAC6, 0x0021, 0xFAC6, 0x003F, 0xFAC6, 0x0061, 0xFAC6, 0x0041, 0xFAC6, 0x0062, 0xF9DC, 0x0021, 0xF9DC, 0x003F, 0xF9DC, 0x0061, 0xF9DC, 0x0041, 0xF9DC, 0x0062, 0xF9F1, 0x0021, 0xF9F1, 0x003F, 0xF9F1, 0x0061, 0xF9F1, 0x0041, 0xF9F1, 0x0062, 0x2FAA, 0x0021, 0x2FAA, 0x003F, 0x2FAA, 0x0061, 0x2FAA, 0x0041, 0x2FAA, 0x0062, 0xFA2F, 0x0021, 0xFA2F, 0x003F, 0xFA2F, 0x0061, 0xFA2F, 0x0041, 0xFA2F, 0x0062, 0xF9B8, 0x0021, 0xF9B8, 0x003F, 0xF9B8, 0x0061, 0xF9B8, 0x0041, 0xF9B8, 0x0062, 0x2FAB, 0x0021, 0x2FAB, 0x003F, 0x2FAB, 0x0061, 0x2FAB, 0x0041, 0x2FAB, 0x0062, 0x2F9F3, 0x0021, 0x2F9F3, 0x003F, 0x2F9F3, 0x0061, 0x2F9F3, 0x0041, 0x2F9F3, 0x0062, 0xF9EA, 0x0021, 0xF9EA, 0x003F, 0xF9EA, 0x0061, 0xF9EA, 0x0041, 0xF9EA, 0x0062, 0xFA68, 0x0021, 0xFAC7, 0x0021, 0xFA68, 0x003F, 0xFAC7, 0x003F, 0xFA68, 0x0061, 0xFAC7, 0x0061, 0xFA68, 0x0041, 0xFAC7, 0x0041, 0xFA68, 0x0062, 0xFAC7, 0x0062, 0x2FAC, 0x0021, 0x2ED7, 0x0021, 0x2FAC, 0x003F, 0x2ED7, 0x003F, 0x2FAC, 0x0061, 0x2FAC, 0x0041, 0x2ED7, 0x0061, 0x2ED7, 0x0041, 0x2FAC, 0x0062, 0x2ED7, 0x0062, 0xF9B2, 0x0021, 0xF9B2, 0x003F, 0xF9B2, 0x0061, 0xF9B2, 0x0041, 0xF9B2, 0x0062, 0xF949, 0x0021, 0xF949, 0x003F, 0xF949, 0x0061, 0xF949, 0x0041, 0xF949, 0x0062, 0x2F9F5, 0x0021, 0x2F9F5, 0x003F, 0x2F9F5, 0x0061, 0x2F9F5, 0x0041, 0x2F9F5, 0x0062, 0xF938, 0x0021, 0xF938, 0x003F, 0xF938, 0x0061, 0xF938, 0x0041, 0xF938, 0x0062, 0xF9B3, 0x0021, 0xF9B3, 0x003F, 0xF9B3, 0x0061, 0xF9B3, 0x0041, 0xF9B3, 0x0062, 0x2FAD, 0x0021, 0x2FAD, 0x003F, 0x2FAD, 0x0061, 0x2FAD, 0x0041, 0x2FAD, 0x0062, 0x2ED8, 0x0021, 0x2ED8, 0x003F, 0x2ED8, 0x0061, 0x2ED8, 0x0041, 0x2ED8, 0x0062, 0xFA1C, 0x0021, 0xFAC8, 0x0021, 0xFA1C, 0x003F, 0xFAC8, 0x003F, 0xFA1C, 0x0061, 0xFAC8, 0x0061, 0xFA1C, 0x0041, 0xFAC8, 0x0041, 0xFA1C, 0x0062, 0xFAC8, 0x0062, 0x2FAE, 0x0021, 0x2FAE, 0x003F, 0x2FAE, 0x0061, 0x2FAE, 0x0041, 0x2FAE, 0x0062, 0x2FAF, 0x0021, 0x2FAF, 0x003F, 0x2FAF, 0x0061, 0x2FAF, 0x0041, 0x2FAF, 0x0062, 0x2FB0, 0x0021, 0x2FB0, 0x003F, 0x2FB0, 0x0061, 0x2FB0, 0x0041, 0x2FB0, 0x0062, 0x2FB1, 0x0021, 0x2FB1, 0x003F, 0x2FB1, 0x0061, 0x2FB1, 0x0041, 0x2FB1, 0x0062, 0x2F9FA, 0x0021, 0x2F9FA, 0x003F, 0x2F9FA, 0x0061, 0x2F9FA, 0x0041, 0x2F9FA, 0x0062, 0x2ED9, 0x0021, 0x2ED9, 0x003F, 0x2ED9, 0x0061, 0x2ED9, 0x0041, 0x2ED9, 0x0062, 0x2FB2, 0x0021, 0x2FB2, 0x003F, 0x2FB2, 0x0061, 0x2FB2, 0x0041, 0x2FB2, 0x0062, 0x2FB3, 0x0021, 0x2FB3, 0x003F, 0x2FB3, 0x0061, 0x2FB3, 0x0041, 0x2FB3, 0x0062, 0xFA69, 0x0021, 0xFACA, 0x0021, 0xFA69, 0x003F, 0xFACA, 0x003F, 0xFA69, 0x0061, 0xFACA, 0x0061, 0xFA69, 0x0041, 0xFACA, 0x0041, 0xFA69, 0x0062, 0xFACA, 0x0062, 0x2FB4, 0x0021, 0x2FB4, 0x003F, 0x2FB4, 0x0061, 0x2FB4, 0x0041, 0x2FB4, 0x0062, 0x32A0, 0x0021, 0x32A0, 0x003F, 0x32A0, 0x0061, 0x32A0, 0x0041, 0x32A0, 0x0062, 0xFACB, 0x0021, 0x2F9FE, 0x0021, 0x2F9FF, 0x0021, 0xFACB, 0x003F, 0x2F9FE, 0x003F, 0x2F9FF, 0x003F, 0xFACB, 0x0061, 0x2F9FE, 0x0061, 0x2F9FF, 0x0061, 0xFACB, 0x0041, 0x2F9FE, 0x0041, 0x2F9FF, 0x0041, 0xFACB, 0x0062, 0x2F9FE, 0x0062, 0x2F9FF, 0x0062, 0xF9B4, 0x0021, 0xF9B4, 0x003F, 0xF9B4, 0x0061, 0xF9B4, 0x0041, 0xF9B4, 0x0062, 0x2FA00, 0x0021, 0x2FA00, 0x003F, 0x2FA00, 0x0061, 0x2FA00, 0x0041, 0x2FA00, 0x0062, 0xFA6A, 0x0021, 0xFACC, 0x0021, 0xFA6A, 0x003F, 0xFACC, 0x003F, 0xFA6A, 0x0061, 0xFACC, 0x0061, 0xFA6A, 0x0041, 0xFACC, 0x0041, 0xFA6A, 0x0062, 0xFACC, 0x0062, 0xF9D0, 0x0021, 0xF9D0, 0x003F, 0xF9D0, 0x0061, 0xF9D0, 0x0041, 0xF9D0, 0x0062, 0x2EDA, 0x0021, 0x2EDA, 0x003F, 0x2EDA, 0x0061, 0x2EDA, 0x0041, 0x2EDA, 0x0062, 0x2FB5, 0x0021, 0x2FB5, 0x003F, 0x2FB5, 0x0061, 0x2FB5, 0x0041, 0x2FB5, 0x0062, 0x2EDB, 0x0021, 0x2EDB, 0x003F, 0x2EDB, 0x0061, 0x2EDB, 0x0041, 0x2EDB, 0x0062, 0x2FB6, 0x0021, 0x2FB6, 0x003F, 0x2FB6, 0x0061, 0x2FB6, 0x0041, 0x2FB6, 0x0062, 0x2EDC, 0x0021, 0x2EDC, 0x003F, 0x2EDC, 0x0061, 0x2EDC, 0x0041, 0x2EDC, 0x0062, 0x2EDD, 0x0021, 0x2FB7, 0x0021, 0x2EDD, 0x003F, 0x2FB7, 0x003F, 0x2EDD, 0x0061, 0x2FB7, 0x0061, 0x2EDD, 0x0041, 0x2FB7, 0x0041, 0x2EDD, 0x0062, 0x2FB7, 0x0062, 0x2EDF, 0x0021, 0x2EDE, 0x0021, 0x2EDF, 0x003F, 0x2EDE, 0x003F, 0x2EDF, 0x0061, 0x2EDF, 0x0041, 0x2EDE, 0x0061, 0x2EDE, 0x0041, 0x2EDF, 0x0062, 0x2EDE, 0x0062, 0x2FA02, 0x0021, 0x2FA02, 0x003F, 0x2FA02, 0x0061, 0x2FA02, 0x0041, 0x2FA02, 0x0062, 0xFA2A, 0x0021, 0xFA2A, 0x003F, 0xFA2A, 0x0061, 0xFA2A, 0x0041, 0xFA2A, 0x0062, 0xFA2B, 0x0021, 0xFA2B, 0x003F, 0xFA2B, 0x0061, 0xFA2B, 0x0041, 0xFA2B, 0x0062, 0xFA2C, 0x0021, 0xFA2C, 0x003F, 0xFA2C, 0x0061, 0xFA2C, 0x0041, 0xFA2C, 0x0062, 0x2FA04, 0x0021, 0x2FA04, 0x003F, 0x2FA04, 0x0061, 0x2FA04, 0x0041, 0x2FA04, 0x0062, 0x2EE0, 0x0021, 0x2EE0, 0x003F, 0x2EE0, 0x0061, 0x2EE0, 0x0041, 0x2EE0, 0x0062, 0x2FB8, 0x0021, 0x2EE1, 0x0021, 0x2FB8, 0x003F, 0x2EE1, 0x003F, 0x2FB8, 0x0061, 0x2FB8, 0x0041, 0x2EE1, 0x0061, 0x2EE1, 0x0041, 0x2FB8, 0x0062, 0x2EE1, 0x0062, 0x2FB9, 0x0021, 0x2FB9, 0x003F, 0x2FB9, 0x0061, 0x2FB9, 0x0041, 0x2FB9, 0x0062, 0x2FA05, 0x0021, 0x2FA05, 0x003F, 0x2FA05, 0x0061, 0x2FA05, 0x0041, 0x2FA05, 0x0062, 0x2FBA, 0x0021, 0x2FBA, 0x003F, 0x2FBA, 0x0061, 0x2FBA, 0x0041, 0x2FBA, 0x0062, 0x2FA06, 0x0021, 0x2FA06, 0x003F, 0x2FA06, 0x0061, 0x2FA06, 0x0041, 0x2FA06, 0x0062, 0xF91A, 0x0021, 0xF91A, 0x003F, 0xF91A, 0x0061, 0xF91A, 0x0041, 0xF91A, 0x0062, 0x2FA07, 0x0021, 0x2FA07, 0x003F, 0x2FA07, 0x0061, 0x2FA07, 0x0041, 0x2FA07, 0x0062, 0xF987, 0x0021, 0xF987, 0x003F, 0xF987, 0x0061, 0xF987, 0x0041, 0xF987, 0x0062, 0x2EE2, 0x0021, 0x2EE2, 0x003F, 0x2EE2, 0x0061, 0x2EE2, 0x0041, 0x2EE2, 0x0062, 0x2FBB, 0x0021, 0x2EE3, 0x0021, 0x2FBB, 0x003F, 0x2EE3, 0x003F, 0x2FBB, 0x0061, 0x2FBB, 0x0041, 0x2EE3, 0x0061, 0x2EE3, 0x0041, 0x2FBB, 0x0062, 0x2EE3, 0x0062, 0x2FBC, 0x0021, 0x2FBC, 0x003F, 0x2FBC, 0x0061, 0x2FBC, 0x0041, 0x2FBC, 0x0062, 0x2FBD, 0x0021, 0x2FBD, 0x003F, 0x2FBD, 0x0061, 0x2FBD, 0x0041, 0x2FBD, 0x0062, 0xFACD, 0x0021, 0x2FA0A, 0x0021, 0xFACD, 0x003F, 0x2FA0A, 0x003F, 0xFACD, 0x0061, 0x2FA0A, 0x0061, 0xFACD, 0x0041, 0x2FA0A, 0x0041, 0xFACD, 0x0062, 0x2FA0A, 0x0062, 0x2FBE, 0x0021, 0x2FBE, 0x003F, 0x2FBE, 0x0061, 0x2FBE, 0x0041, 0x2FBE, 0x0062, 0x2FBF, 0x0021, 0x2FBF, 0x003F, 0x2FBF, 0x0061, 0x2FBF, 0x0041, 0x2FBF, 0x0062, 0x2FC0, 0x0021, 0x2FC0, 0x003F, 0x2FC0, 0x0061, 0x2FC0, 0x0041, 0x2FC0, 0x0062, 0x2FC1, 0x0021, 0x2EE4, 0x0021, 0x2FC1, 0x003F, 0x2EE4, 0x003F, 0x2FC1, 0x0061, 0x2FC1, 0x0041, 0x2EE4, 0x0061, 0x2EE4, 0x0041, 0x2FC1, 0x0062, 0x2EE4, 0x0062, 0x2FC2, 0x0021, 0x2FC2, 0x003F, 0x2FC2, 0x0061, 0x2FC2, 0x0041, 0x2FC2, 0x0062, 0xF939, 0x0021, 0xF939, 0x003F, 0xF939, 0x0061, 0xF939, 0x0041, 0xF939, 0x0062, 0x2FA0B, 0x0021, 0x2FA0B, 0x003F, 0x2FA0B, 0x0061, 0x2FA0B, 0x0041, 0x2FA0B, 0x0062, 0xF9F2, 0x0021, 0xF9F2, 0x003F, 0xF9F2, 0x0061, 0xF9F2, 0x0041, 0xF9F2, 0x0062, 0x2EE5, 0x0021, 0x2EE5, 0x003F, 0x2EE5, 0x0061, 0x2EE5, 0x0041, 0x2EE5, 0x0062, 0x2FC3, 0x0021, 0x2FC3, 0x003F, 0x2FC3, 0x0061, 0x2FC3, 0x0041, 0x2FC3, 0x0062, 0x2FA0C, 0x0021, 0x2FA0C, 0x003F, 0x2FA0C, 0x0061, 0x2FA0C, 0x0041, 0x2FA0C, 0x0062, 0x2FA0F, 0x0021, 0x2FA0F, 0x003F, 0x2FA0F, 0x0061, 0x2FA0F, 0x0041, 0x2FA0F, 0x0062, 0xFA2D, 0x0021, 0xFA2D, 0x003F, 0xFA2D, 0x0061, 0xFA2D, 0x0041, 0xFA2D, 0x0062, 0xF93A, 0x0021, 0xF93A, 0x003F, 0xF93A, 0x0061, 0xF93A, 0x0041, 0xF93A, 0x0062, 0xF920, 0x0021, 0xF920, 0x003F, 0xF920, 0x0061, 0xF920, 0x0041, 0xF920, 0x0062, 0x2EE6, 0x0021, 0x2EE6, 0x003F, 0x2EE6, 0x0061, 0x2EE6, 0x0041, 0x2EE6, 0x0062, 0x2FC4, 0x0021, 0x2EE7, 0x0021, 0x2FC4, 0x003F, 0x2EE7, 0x003F, 0x2FC4, 0x0061, 0x2FC4, 0x0041, 0x2EE7, 0x0061, 0x2EE7, 0x0041, 0x2FC4, 0x0062, 0x2EE7, 0x0062, 0xF940, 0x0021, 0x2FC5, 0x0021, 0xF940, 0x003F, 0x2FC5, 0x003F, 0xF940, 0x0061, 0xF940, 0x0041, 0x2FC5, 0x0061, 0x2FC5, 0x0041, 0xF940, 0x0062, 0x2FC5, 0x0062, 0xF988, 0x0021, 0xF988, 0x003F, 0xF988, 0x0061, 0xF988, 0x0041, 0xF988, 0x0062, 0xF9F3, 0x0021, 0xF9F3, 0x003F, 0xF9F3, 0x0061, 0xF9F3, 0x0041, 0xF9F3, 0x0062, 0x2FC6, 0x0021, 0x2FC6, 0x003F, 0x2FC6, 0x0061, 0x2FC6, 0x0041, 0x2FC6, 0x0062, 0x2EE8, 0x0021, 0x2EE8, 0x003F, 0x2EE8, 0x0061, 0x2EE8, 0x0041, 0x2EE8, 0x0062, 0x2FA15, 0x0021, 0x2FC7, 0x0021, 0x2FA15, 0x003F, 0x2FC7, 0x003F, 0x2FA15, 0x0061, 0x2FA15, 0x0041, 0x2FC7, 0x0061, 0x2FC7, 0x0041, 0x2FA15, 0x0062, 0x2FC7, 0x0062, 0x2FC8, 0x0021, 0x2FC8, 0x003F, 0x2FC8, 0x0061, 0x2FC8, 0x0041, 0x2FC8, 0x0062, 0x2EE9, 0x0021, 0x2EE9, 0x003F, 0x2EE9, 0x0061, 0x2EE9, 0x0041, 0x2EE9, 0x0062, 0x2FC9, 0x0021, 0x2FC9, 0x003F, 0x2FC9, 0x0061, 0x2FC9, 0x0041, 0x2FC9, 0x0062, 0xF989, 0x0021, 0xF989, 0x003F, 0xF989, 0x0061, 0xF989, 0x0041, 0xF989, 0x0062, 0x2FCA, 0x0021, 0x2FCA, 0x003F, 0x2FCA, 0x0061, 0x2FCA, 0x0041, 0x2FCA, 0x0062, 0x2FA17, 0x0021, 0x2FCB, 0x0021, 0x2FA17, 0x003F, 0x2FCB, 0x003F, 0x2FA17, 0x0061, 0x2FA17, 0x0041, 0x2FCB, 0x0061, 0x2FCB, 0x0041, 0x2FA17, 0x0062, 0x2FCB, 0x0062, 0x2FCC, 0x0021, 0x2FCC, 0x003F, 0x2FCC, 0x0061, 0x2FCC, 0x0041, 0x2FCC, 0x0062, 0x2FA19, 0x0021, 0x2FA19, 0x003F, 0x2FA19, 0x0061, 0x2FA19, 0x0041, 0x2FA19, 0x0062, 0x2FCD, 0x0021, 0x2FCD, 0x003F, 0x2FCD, 0x0061, 0x2FCD, 0x0041, 0x2FCD, 0x0062, 0x2FA1A, 0x0021, 0x2FA1A, 0x003F, 0x2FA1A, 0x0061, 0x2FA1A, 0x0041, 0x2FA1A, 0x0062, 0x2FCE, 0x0021, 0x2FCE, 0x003F, 0x2FCE, 0x0061, 0x2FCE, 0x0041, 0x2FCE, 0x0062, 0x2FA1B, 0x0021, 0x2FA1B, 0x003F, 0x2FA1B, 0x0061, 0x2FA1B, 0x0041, 0x2FA1B, 0x0062, 0x2FCF, 0x0021, 0x2FCF, 0x003F, 0x2FCF, 0x0061, 0x2FCF, 0x0041, 0x2FCF, 0x0062, 0x2FA1C, 0x0021, 0x2FD0, 0x0021, 0x2FA1C, 0x003F, 0x2FD0, 0x003F, 0x2FA1C, 0x0061, 0x2FA1C, 0x0041, 0x2FD0, 0x0061, 0x2FD0, 0x0041, 0x2FA1C, 0x0062, 0x2FD0, 0x0062, 0xFAD8, 0x0021, 0xFAD8, 0x003F, 0xFAD8, 0x0061, 0xFAD8, 0x0041, 0xFAD8, 0x0062, 0x2FD1, 0x0021, 0x2EEB, 0x0021, 0x2FD1, 0x003F, 0x2EEB, 0x003F, 0x2FD1, 0x0061, 0x2FD1, 0x0041, 0x2EEB, 0x0061, 0x2EEB, 0x0041, 0x2FD1, 0x0062, 0x2EEB, 0x0062, 0x2EEC, 0x0021, 0x2EEC, 0x003F, 0x2EEC, 0x0061, 0x2EEC, 0x0041, 0x2EEC, 0x0062, 0x2FD2, 0x0021, 0x2EED, 0x0021, 0x2FD2, 0x003F, 0x2EED, 0x003F, 0x2FD2, 0x0061, 0x2FD2, 0x0041, 0x2EED, 0x0061, 0x2EED, 0x0041, 0x2FD2, 0x0062, 0x2EED, 0x0062, 0x2EEE, 0x0021, 0x2EEE, 0x003F, 0x2EEE, 0x0061, 0x2EEE, 0x0041, 0x2EEE, 0x0062, 0xF9C4, 0x0021, 0x2FD3, 0x0021, 0x2EEF, 0x0021, 0xF9C4, 0x003F, 0x2FD3, 0x003F, 0x2EEF, 0x003F, 0xF9C4, 0x0061, 0xF9C4, 0x0041, 0x2FD3, 0x0061, 0x2FD3, 0x0041, 0x2EEF, 0x0061, 0x2EEF, 0x0041, 0xF9C4, 0x0062, 0x2FD3, 0x0062, 0x2EEF, 0x0062, 0xFAD9, 0x0021, 0xFAD9, 0x003F, 0xFAD9, 0x0061, 0xFAD9, 0x0041, 0xFAD9, 0x0062, 0x2EF0, 0x0021, 0x2EF0, 0x003F, 0x2EF0, 0x0061, 0x2EF0, 0x0041, 0x2EF0, 0x0062, 0xF907, 0x0021, 0xF908, 0x0021, 0xFACE, 0x0021, 0x2FD4, 0x0021, 0x2EF1, 0x0021, 0x2EF2, 0x0021, 0xF907, 0x003F, 0xF908, 0x003F, 0xFACE, 0x003F, 0x2FD4, 0x003F, 0x2EF1, 0x003F, 0x2EF2, 0x003F, 0xF907, 0x0061, 0xF908, 0x0061, 0xFACE, 0x0061, 0xF907, 0x0041, 0xF908, 0x0041, 0xFACE, 0x0041, 0x2FD4, 0x0061, 0x2FD4, 0x0041, 0x2EF1, 0x0061, 0x2EF1, 0x0041, 0x2EF2, 0x0061, 0x2EF2, 0x0041, 0xF907, 0x0062, 0xF908, 0x0062, 0xFACE, 0x0062, 0x2FD4, 0x0062, 0x2EF1, 0x0062, 0x2EF2, 0x0062, 0x2EF3, 0x0021, 0x2EF3, 0x003F, 0x2EF3, 0x0061, 0x2EF3, 0x0041, 0x2EF3, 0x0062, 0x2FD5, 0x0021, 0x2FD5, 0x003F, 0x2FD5, 0x0061, 0x2FD5, 0x0041, 0x2FD5, 0x0062, 0x0378, 0x0021, 0x0378, 0x003F, 0x0378, 0x0061, 0x0378, 0x0041, 0x0378, 0x0062, 0xE000, 0x0021, 0xE000, 0x003F, 0xE000, 0x0061, 0xE000, 0x0041, 0xE000, 0x0062, 0xE001, 0x0021, 0xE001, 0x003F, 0xE001, 0x0061, 0xE001, 0x0041, 0xE001, 0x0062, 0xE002, 0x0021, 0xE002, 0x003F, 0xE002, 0x0061, 0xE002, 0x0041, 0xE002, 0x0062, 0xE003, 0x0021, 0xE003, 0x003F, 0xE003, 0x0061, 0xE003, 0x0041, 0xE003, 0x0062, 0xE004, 0x0021, 0xE004, 0x003F, 0xE004, 0x0061, 0xE004, 0x0041, 0xE004, 0x0062, 0xE005, 0x0021, 0xE005, 0x003F, 0xE005, 0x0061, 0xE005, 0x0041, 0xE005, 0x0062, 0xF8FA, 0x0021, 0xF8FA, 0x003F, 0xF8FA, 0x0061, 0xF8FA, 0x0041, 0xF8FA, 0x0062, 0xF8FB, 0x0021, 0xF8FB, 0x003F, 0xF8FB, 0x0061, 0xF8FB, 0x0041, 0xF8FB, 0x0062, 0xF8FC, 0x0021, 0xF8FC, 0x003F, 0xF8FC, 0x0061, 0xF8FC, 0x0041, 0xF8FC, 0x0062, 0xF8FD, 0x0021, 0xF8FD, 0x003F, 0xF8FD, 0x0061, 0xF8FD, 0x0041, 0xF8FD, 0x0062, 0xF8FE, 0x0021, 0xF8FE, 0x003F, 0xF8FE, 0x0061, 0xF8FE, 0x0041, 0xF8FE, 0x0062, 0xF8FF, 0x0021, 0xF8FF, 0x003F, 0xF8FF, 0x0061, 0xF8FF, 0x0041, 0xF8FF, 0x0062, 0xFFF0, 0x0021, 0xFFF0, 0x003F, 0xFFF0, 0x0061, 0xFFF0, 0x0041, 0xFFF0, 0x0062, 0x2A6E0, 0x0021, 0x2A6E0, 0x003F, 0x2A6E0, 0x0061, 0x2A6E0, 0x0041, 0x2A6E0, 0x0062, 0x2B739, 0x0021, 0x2B739, 0x003F, 0x2B739, 0x0061, 0x2B739, 0x0041, 0x2B739, 0x0062, 0x2B81E, 0x0021, 0x2B81E, 0x003F, 0x2B81E, 0x0061, 0x2B81E, 0x0041, 0x2B81E, 0x0062, 0x2CEA2, 0x0021, 0x2CEA2, 0x003F, 0x2CEA2, 0x0061, 0x2CEA2, 0x0041, 0x2CEA2, 0x0062, 0x2EBE1, 0x0021, 0x2EBE1, 0x003F, 0x2EBE1, 0x0061, 0x2EBE1, 0x0041, 0x2EBE1, 0x0062, 0xC0000, 0x0021, 0xC0000, 0x003F, 0xC0000, 0x0061, 0xC0000, 0x0041, 0xC0000, 0x0062, 0xD0000, 0x0021, 0xD0000, 0x003F, 0xD0000, 0x0061, 0xD0000, 0x0041, 0xD0000, 0x0062, 0xE0000, 0x0021, 0xE0000, 0x003F, 0xE0000, 0x0061, 0xE0000, 0x0041, 0xE0000, 0x0062, 0xE0002, 0x0021, 0xE0002, 0x003F, 0xE0002, 0x0061, 0xE0002, 0x0041, 0xE0002, 0x0062, 0xE0003, 0x0021, 0xE0003, 0x003F, 0xE0003, 0x0061, 0xE0003, 0x0041, 0xE0003, 0x0062, 0xE0004, 0x0021, 0xE0004, 0x003F, 0xE0004, 0x0061, 0xE0004, 0x0041, 0xE0004, 0x0062, 0xE0005, 0x0021, 0xE0005, 0x003F, 0xE0005, 0x0061, 0xE0005, 0x0041, 0xE0005, 0x0062, 0xF0000, 0x0021, 0xF0000, 0x003F, 0xF0000, 0x0061, 0xF0000, 0x0041, 0xF0000, 0x0062, 0xF0001, 0x0021, 0xF0001, 0x003F, 0xF0001, 0x0061, 0xF0001, 0x0041, 0xF0001, 0x0062, 0xF0002, 0x0021, 0xF0002, 0x003F, 0xF0002, 0x0061, 0xF0002, 0x0041, 0xF0002, 0x0062, 0xF0003, 0x0021, 0xF0003, 0x003F, 0xF0003, 0x0061, 0xF0003, 0x0041, 0xF0003, 0x0062, 0xF0004, 0x0021, 0xF0004, 0x003F, 0xF0004, 0x0061, 0xF0004, 0x0041, 0xF0004, 0x0062, 0xF0005, 0x0021, 0xF0005, 0x003F, 0xF0005, 0x0061, 0xF0005, 0x0041, 0xF0005, 0x0062, 0xF00F8, 0x0021, 0xF00F8, 0x003F, 0xF00F8, 0x0061, 0xF00F8, 0x0041, 0xF00F8, 0x0062, 0xF00F9, 0x0021, 0xF00F9, 0x003F, 0xF00F9, 0x0061, 0xF00F9, 0x0041, 0xF00F9, 0x0062, 0xF00FA, 0x0021, 0xF00FA, 0x003F, 0xF00FA, 0x0061, 0xF00FA, 0x0041, 0xF00FA, 0x0062, 0xF00FB, 0x0021, 0xF00FB, 0x003F, 0xF00FB, 0x0061, 0xF00FB, 0x0041, 0xF00FB, 0x0062, 0xF00FC, 0x0021, 0xF00FC, 0x003F, 0xF00FC, 0x0061, 0xF00FC, 0x0041, 0xF00FC, 0x0062, 0xF00FD, 0x0021, 0xF00FD, 0x003F, 0xF00FD, 0x0061, 0xF00FD, 0x0041, 0xF00FD, 0x0062, 0xFFF00, 0x0021, 0xFFF00, 0x003F, 0xFFF00, 0x0061, 0xFFF00, 0x0041, 0xFFF00, 0x0062, 0xFFF01, 0x0021, 0xFFF01, 0x003F, 0xFFF01, 0x0061, 0xFFF01, 0x0041, 0xFFF01, 0x0062, 0xFFF02, 0x0021, 0xFFF02, 0x003F, 0xFFF02, 0x0061, 0xFFF02, 0x0041, 0xFFF02, 0x0062, 0xFFF03, 0x0021, 0xFFF03, 0x003F, 0xFFF03, 0x0061, 0xFFF03, 0x0041, 0xFFF03, 0x0062, 0xFFF04, 0x0021, 0xFFF04, 0x003F, 0xFFF04, 0x0061, 0xFFF04, 0x0041, 0xFFF04, 0x0062, 0xFFF05, 0x0021, 0xFFF05, 0x003F, 0xFFF05, 0x0061, 0xFFF05, 0x0041, 0xFFF05, 0x0062, 0xFFFF8, 0x0021, 0xFFFF8, 0x003F, 0xFFFF8, 0x0061, 0xFFFF8, 0x0041, 0xFFFF8, 0x0062, 0xFFFF9, 0x0021, 0xFFFF9, 0x003F, 0xFFFF9, 0x0061, 0xFFFF9, 0x0041, 0xFFFF9, 0x0062, 0xFFFFA, 0x0021, 0xFFFFA, 0x003F, 0xFFFFA, 0x0061, 0xFFFFA, 0x0041, 0xFFFFA, 0x0062, 0xFFFFB, 0x0021, 0xFFFFB, 0x003F, 0xFFFFB, 0x0061, 0xFFFFB, 0x0041, 0xFFFFB, 0x0062, 0xFFFFC, 0x0021, 0xFFFFC, 0x003F, 0xFFFFC, 0x0061, 0xFFFFC, 0x0041, 0xFFFFC, 0x0062, 0xFFFFD, 0x0021, 0xFFFFD, 0x003F, 0xFFFFD, 0x0061, 0xFFFFD, 0x0041, 0xFFFFD, 0x0062, 0x100000, 0x0021, 0x100000, 0x003F, 0x100000, 0x0061, 0x100000, 0x0041, 0x100000, 0x0062, 0x100001, 0x0021, 0x100001, 0x003F, 0x100001, 0x0061, 0x100001, 0x0041, 0x100001, 0x0062, 0x100002, 0x0021, 0x100002, 0x003F, 0x100002, 0x0061, 0x100002, 0x0041, 0x100002, 0x0062, 0x100003, 0x0021, 0x100003, 0x003F, 0x100003, 0x0061, 0x100003, 0x0041, 0x100003, 0x0062, 0x100004, 0x0021, 0x100004, 0x003F, 0x100004, 0x0061, 0x100004, 0x0041, 0x100004, 0x0062, 0x100005, 0x0021, 0x100005, 0x003F, 0x100005, 0x0061, 0x100005, 0x0041, 0x100005, 0x0062, 0x1000F8, 0x0021, 0x1000F8, 0x003F, 0x1000F8, 0x0061, 0x1000F8, 0x0041, 0x1000F8, 0x0062, 0x1000F9, 0x0021, 0x1000F9, 0x003F, 0x1000F9, 0x0061, 0x1000F9, 0x0041, 0x1000F9, 0x0062, 0x1000FA, 0x0021, 0x1000FA, 0x003F, 0x1000FA, 0x0061, 0x1000FA, 0x0041, 0x1000FA, 0x0062, 0x1000FB, 0x0021, 0x1000FB, 0x003F, 0x1000FB, 0x0061, 0x1000FB, 0x0041, 0x1000FB, 0x0062, 0x1000FC, 0x0021, 0x1000FC, 0x003F, 0x1000FC, 0x0061, 0x1000FC, 0x0041, 0x1000FC, 0x0062, 0x1000FD, 0x0021, 0x1000FD, 0x003F, 0x1000FD, 0x0061, 0x1000FD, 0x0041, 0x1000FD, 0x0062, 0x10FF00, 0x0021, 0x10FF00, 0x003F, 0x10FF00, 0x0061, 0x10FF00, 0x0041, 0x10FF00, 0x0062, 0x10FF01, 0x0021, 0x10FF01, 0x003F, 0x10FF01, 0x0061, 0x10FF01, 0x0041, 0x10FF01, 0x0062, 0x10FF02, 0x0021, 0x10FF02, 0x003F, 0x10FF02, 0x0061, 0x10FF02, 0x0041, 0x10FF02, 0x0062, 0x10FF03, 0x0021, 0x10FF03, 0x003F, 0x10FF03, 0x0061, 0x10FF03, 0x0041, 0x10FF03, 0x0062, 0x10FF04, 0x0021, 0x10FF04, 0x003F, 0x10FF04, 0x0061, 0x10FF04, 0x0041, 0x10FF04, 0x0062, 0x10FF05, 0x0021, 0x10FF05, 0x003F, 0x10FF05, 0x0061, 0x10FF05, 0x0041, 0x10FF05, 0x0062, 0x10FFF8, 0x0021, 0x10FFF8, 0x003F, 0x10FFF8, 0x0061, 0x10FFF8, 0x0041, 0x10FFF8, 0x0062, 0x10FFF9, 0x0021, 0x10FFF9, 0x003F, 0x10FFF9, 0x0061, 0x10FFF9, 0x0041, 0x10FFF9, 0x0062, 0x10FFFA, 0x0021, 0x10FFFA, 0x003F, 0x10FFFA, 0x0061, 0x10FFFA, 0x0041, 0x10FFFA, 0x0062, 0x10FFFB, 0x0021, 0x10FFFB, 0x003F, 0x10FFFB, 0x0061, 0x10FFFB, 0x0041, 0x10FFFB, 0x0062, 0x10FFFC, 0x0021, 0x10FFFC, 0x003F, 0x10FFFC, 0x0061, 0x10FFFC, 0x0041, 0x10FFFC, 0x0062, 0x10FFFD, 0x0021, 0x10FFFD, 0x003F, 0x10FFFD, 0x0061, 0x10FFFD, 0x0041, 0x10FFFD, 0x0062, 0xFFFD, 0x0021, 0xFFFD, 0x003F, 0xFFFD, 0x0061, 0xFFFD, 0x0041, 0xFFFD, 0x0062
}};

std::array<std::pair<uint32_t, uint32_t>, 1752> const g_cp_ranges = {{
{0, 2}, {2, 4}, {4, 6}, {6, 8}, {8, 10}, {10, 12}, {12, 14}, {14, 16}, {16, 18}, {18, 20}, {20, 22}, {22, 24}, {24, 26}, {26, 28}, {28, 30}, {30, 32}, {32, 34}, {34, 36}, {36, 38}, {38, 40}, {40, 42}, {42, 44}, {44, 46}, {46, 48}, {48, 50}, {50, 52}, {52, 54}, {54, 56}, {56, 58}, {58, 60}, {60, 62}, {62, 64}, {64, 66}, {66, 68}, {68, 70}, {70, 72}, {72, 74}, {74, 76}, {76, 78}, {78, 80}, {80, 82}, {82, 84}, {84, 86}, {86, 88}, {88, 90}, {90, 92}, {92, 94}, {94, 96}, {96, 98}, {98, 100}, {100, 102}, {102, 104}, {104, 106}, {106, 108}, {108, 110}, {110, 112}, {112, 114}, {114, 116}, {116, 118}, {118, 120}, {120, 122}, {122, 124}, {124, 126}, {126, 128}, {128, 130}, {130, 132}, {132, 134}, {134, 136}, {136, 138}, {138, 140}, {140, 142}, {142, 144}, {144, 146}, {146, 148}, {148, 150}, {150, 152}, {152, 154}, {154, 156}, {156, 158}, {158, 160}, {160, 162}, {162, 164}, {164, 166}, {166, 168}, {168, 170}, {170, 172}, {172, 174}, {174, 176}, {176, 178}, {178, 180}, {180, 182}, {182, 184}, {184, 186}, {186, 188}, {188, 190}, {190, 192}, {192, 194}, {194, 196}, {196, 198}, {198, 200}, {200, 202}, {202, 204}, {204, 206}, {206, 208}, {208, 210}, {210, 212}, {212, 214}, {214, 216}, {216, 218}, {218, 220}, {220, 222}, {222, 224}, {224, 226}, {226, 228}, {228, 230}, {230, 232}, {232, 234}, {234, 236}, {236, 238}, {238, 240}, {240, 242}, {242, 244}, {244, 246}, {246, 248}, {248, 250}, {250, 252}, {252, 254}, {254, 256}, {256, 258}, {258, 260}, {260, 262}, {262, 264}, {264, 266}, {266, 268}, {268, 270}, {270, 272}, {272, 274}, {274, 276}, {276, 278}, {278, 280}, {280, 282}, {282, 284}, {284, 286}, {286, 288}, {288, 290}, {290, 292}, {292, 294}, {294, 296}, {296, 298}, {298, 300}, {300, 302}, {302, 304}, {304, 306}, {306, 308}, {308, 310}, {310, 312}, {312, 314}, {314, 316}, {316, 318}, {318, 320}, {320, 322}, {322, 324}, {324, 326}, {326, 328}, {328, 330}, {330, 332}, {332, 334}, {334, 336}, {336, 338}, {338, 340}, {340, 342}, {342, 344}, {344, 346}, {346, 348}, {348, 350}, {350, 352}, {352, 354}, {354, 356}, {356, 358}, {358, 360}, {360, 362}, {362, 364}, {364, 366}, {366, 368}, {368, 370}, {370, 372}, {372, 374}, {374, 376}, {376, 378}, {378, 380}, {380, 382}, {382, 384}, {384, 386}, {386, 388}, {388, 390}, {390, 392}, {392, 394}, {394, 396}, {396, 398}, {398, 400}, {400, 402}, {402, 404}, {404, 406}, {406, 408}, {408, 410}, {410, 412}, {412, 414}, {414, 416}, {416, 418}, {418, 420}, {420, 422}, {422, 424}, {424, 426}, {426, 428}, {428, 430}, {430, 432}, {432, 434}, {434, 436}, {436, 438}, {438, 440}, {440, 442}, {442, 444}, {444, 446}, {446, 448}, {448, 450}, {450, 452}, {452, 454}, {454, 456}, {456, 458}, {458, 460}, {460, 462}, {462, 464}, {464, 466}, {466, 468}, {468, 470}, {470, 472}, {472, 474}, {474, 476}, {476, 478}, {478, 480}, {480, 482}, {482, 484}, {484, 486}, {486, 488}, {488, 490}, {490, 492}, {492, 494}, {494, 496}, {496, 498}, {498, 500}, {500, 502}, {502, 504}, {504, 506}, {506, 508}, {508, 510}, {510, 512}, {512, 514}, {514, 516}, {516, 518}, {518, 520}, {520, 522}, {522, 524}, {524, 526}, {526, 528}, {528, 530}, {530, 532}, {532, 534}, {534, 536}, {536, 538}, {538, 540}, {540, 542}, {542, 544}, {544, 546}, {546, 548}, {548, 550}, {550, 552}, {552, 554}, {554, 556}, {556, 558}, {558, 560}, {560, 562}, {562, 564}, {564, 566}, {566, 568}, {568, 570}, {570, 572}, {572, 574}, {574, 576}, {576, 578}, {578, 580}, {580, 582}, {582, 584}, {584, 586}, {586, 588}, {588, 590}, {590, 592}, {592, 594}, {594, 596}, {596, 598}, {598, 600}, {600, 602}, {602, 604}, {604, 606}, {606, 608}, {608, 610}, {610, 612}, {612, 614}, {614, 616}, {616, 618}, {618, 620}, {620, 622}, {622, 624}, {624, 626}, {626, 628}, {628, 630}, {630, 632}, {632, 634}, {634, 636}, {636, 638}, {638, 640}, {640, 642}, {642, 644}, {644, 646}, {646, 648}, {648, 650}, {650, 652}, {652, 654}, {654, 656}, {656, 658}, {658, 660}, {660, 662}, {662, 664}, {664, 666}, {666, 668}, {668, 670}, {670, 672}, {672, 674}, {674, 676}, {676, 678}, {678, 680}, {680, 682}, {682, 684}, {684, 686}, {686, 688}, {688, 690}, {690, 692}, {692, 694}, {694, 696}, {696, 698}, {698, 700}, {700, 702}, {702, 704}, {704, 706}, {706, 708}, {708, 710}, {710, 712}, {712, 714}, {714, 716}, {716, 718}, {718, 720}, {720, 722}, {722, 724}, {724, 726}, {726, 728}, {728, 730}, {730, 732}, {732, 734}, {734, 736}, {736, 738}, {738, 740}, {740, 742}, {742, 744}, {744, 746}, {746, 748}, {748, 750}, {750, 752}, {752, 754}, {754, 756}, {756, 758}, {758, 760}, {760, 762}, {762, 764}, {764, 766}, {766, 768}, {768, 770}, {770, 772}, {772, 774}, {774, 776}, {776, 778}, {778, 780}, {780, 782}, {782, 784}, {784, 786}, {786, 788}, {788, 790}, {790, 792}, {792, 794}, {794, 796}, {796, 798}, {798, 800}, {800, 802}, {802, 804}, {804, 806}, {806, 808}, {808, 810}, {810, 812}, {812, 814}, {814, 816}, {816, 818}, {818, 820}, {820, 822}, {822, 824}, {824, 826}, {826, 828}, {828, 830}, {830, 832}, {832, 834}, {834, 836}, {836, 838}, {838, 840}, {840, 842}, {842, 844}, {844, 846}, {846, 848}, {848, 850}, {850, 852}, {852, 854}, {854, 856}, {856, 858}, {858, 860}, {860, 862}, {862, 864}, {864, 866}, {866, 868}, {868, 870}, {870, 872}, {872, 874}, {874, 876}, {876, 878}, {878, 880}, {880, 882}, {882, 884}, {884, 886}, {886, 888}, {888, 890}, {890, 892}, {892, 894}, {894, 896}, {896, 898}, {898, 900}, {900, 902}, {902, 904}, {904, 906}, {906, 908}, {908, 910}, {910, 912}, {912, 914}, {914, 916}, {916, 918}, {918, 920}, {920, 922}, {922, 924}, {924, 926}, {926, 928}, {928, 930}, {930, 932}, {932, 934}, {934, 936}, {936, 938}, {938, 940}, {940, 942}, {942, 944}, {944, 946}, {946, 948}, {948, 950}, {950, 952}, {952, 954}, {954, 956}, {956, 958}, {958, 960}, {960, 962}, {962, 964}, {964, 966}, {966, 968}, {968, 970}, {970, 972}, {972, 974}, {974, 976}, {976, 978}, {978, 980}, {980, 982}, {982, 984}, {984, 986}, {986, 988}, {988, 990}, {990, 992}, {992, 994}, {994, 996}, {996, 998}, {998, 1000}, {1000, 1002}, {1002, 1004}, {1004, 1006}, {1006, 1008}, {1008, 1010}, {1010, 1012}, {1012, 1014}, {1014, 1016}, {1016, 1018}, {1018, 1020}, {1020, 1022}, {1022, 1024}, {1024, 1026}, {1026, 1028}, {1028, 1030}, {1030, 1032}, {1032, 1034}, {1034, 1036}, {1036, 1038}, {1038, 1040}, {1040, 1042}, {1042, 1044}, {1044, 1046}, {1046, 1048}, {1048, 1050}, {1050, 1052}, {1052, 1054}, {1054, 1056}, {1056, 1058}, {1058, 1060}, {1060, 1062}, {1062, 1064}, {1064, 1066}, {1066, 1068}, {1068, 1070}, {1070, 1072}, {1072, 1074}, {1074, 1076}, {1076, 1078}, {1078, 1080}, {1080, 1082}, {1082, 1084}, {1084, 1086}, {1086, 1088}, {1088, 1090}, {1090, 1092}, {1092, 1094}, {1094, 1096}, {1096, 1098}, {1098, 1100}, {1100, 1102}, {1102, 1104}, {1104, 1106}, {1106, 1108}, {1108, 1110}, {1110, 1112}, {1112, 1114}, {1114, 1116}, {1116, 1118}, {1118, 1120}, {1120, 1122}, {1122, 1124}, {1124, 1126}, {1126, 1128}, {1128, 1130}, {1130, 1132}, {1132, 1134}, {1134, 1136}, {1136, 1138}, {1138, 1140}, {1140, 1142}, {1142, 1144}, {1144, 1146}, {1146, 1148}, {1148, 1150}, {1150, 1152}, {1152, 1154}, {1154, 1156}, {1156, 1158}, {1158, 1160}, {1160, 1162}, {1162, 1164}, {1164, 1166}, {1166, 1168}, {1168, 1170}, {1170, 1172}, {1172, 1174}, {1174, 1176}, {1176, 1178}, {1178, 1180}, {1180, 1182}, {1182, 1184}, {1184, 1186}, {1186, 1188}, {1188, 1190}, {1190, 1192}, {1192, 1194}, {1194, 1196}, {1196, 1198}, {1198, 1200}, {1200, 1202}, {1202, 1204}, {1204, 1206}, {1206, 1208}, {1208, 1210}, {1210, 1212}, {1212, 1214}, {1214, 1216}, {1216, 1218}, {1218, 1220}, {1220, 1222}, {1222, 1224}, {1224, 1226}, {1226, 1228}, {1228, 1230}, {1230, 1232}, {1232, 1234}, {1234, 1236}, {1236, 1238}, {1238, 1240}, {1240, 1242}, {1242, 1244}, {1244, 1246}, {1246, 1248}, {1248, 1250}, {1250, 1252}, {1252, 1254}, {1254, 1256}, {1256, 1258}, {1258, 1260}, {1260, 1262}, {1262, 1264}, {1264, 1266}, {1266, 1268}, {1268, 1270}, {1270, 1272}, {1272, 1274}, {1274, 1276}, {1276, 1278}, {1278, 1280}, {1280, 1282}, {1282, 1284}, {1284, 1286}, {1286, 1288}, {1288, 1290}, {1290, 1292}, {1292, 1294}, {1294, 1296}, {1296, 1298}, {1298, 1300}, {1300, 1302}, {1302, 1304}, {1304, 1306}, {1306, 1308}, {1308, 1310}, {1310, 1312}, {1312, 1314}, {1314, 1316}, {1316, 1318}, {1318, 1320}, {1320, 1322}, {1322, 1324}, {1324, 1326}, {1326, 1328}, {1328, 1330}, {1330, 1332}, {1332, 1334}, {1334, 1336}, {1336, 1338}, {1338, 1340}, {1340, 1342}, {1342, 1344}, {1344, 1346}, {1346, 1348}, {1348, 1350}, {1350, 1352}, {1352, 1354}, {1354, 1356}, {1356, 1358}, {1358, 1360}, {1360, 1362}, {1362, 1364}, {1364, 1366}, {1366, 1368}, {1368, 1370}, {1370, 1372}, {1372, 1374}, {1374, 1376}, {1376, 1378}, {1378, 1380}, {1380, 1382}, {1382, 1384}, {1384, 1386}, {1386, 1388}, {1388, 1390}, {1390, 1392}, {1392, 1394}, {1394, 1396}, {1396, 1398}, {1398, 1400}, {1400, 1402}, {1402, 1404}, {1404, 1406}, {1406, 1408}, {1408, 1410}, {1410, 1412}, {1412, 1414}, {1414, 1416}, {1416, 1418}, {1418, 1420}, {1420, 1422}, {1422, 1424}, {1424, 1426}, {1426, 1428}, {1428, 1430}, {1430, 1432}, {1432, 1434}, {1434, 1436}, {1436, 1438}, {1438, 1440}, {1440, 1442}, {1442, 1444}, {1444, 1446}, {1446, 1448}, {1448, 1450}, {1450, 1452}, {1452, 1454}, {1454, 1456}, {1456, 1458}, {1458, 1460}, {1460, 1462}, {1462, 1464}, {1464, 1466}, {1466, 1468}, {1468, 1470}, {1470, 1472}, {1472, 1474}, {1474, 1476}, {1476, 1478}, {1478, 1480}, {1480, 1482}, {1482, 1484}, {1484, 1486}, {1486, 1488}, {1488, 1490}, {1490, 1492}, {1492, 1494}, {1494, 1496}, {1496, 1498}, {1498, 1500}, {1500, 1502}, {1502, 1504}, {1504, 1506}, {1506, 1508}, {1508, 1510}, {1510, 1512}, {1512, 1514}, {1514, 1516}, {1516, 1518}, {1518, 1520}, {1520, 1522}, {1522, 1524}, {1524, 1526}, {1526, 1528}, {1528, 1530}, {1530, 1532}, {1532, 1534}, {1534, 1536}, {1536, 1538}, {1538, 1540}, {1540, 1542}, {1542, 1544}, {1544, 1546}, {1546, 1548}, {1548, 1550}, {1550, 1552}, {1552, 1554}, {1554, 1556}, {1556, 1558}, {1558, 1560}, {1560, 1562}, {1562, 1564}, {1564, 1566}, {1566, 1568}, {1568, 1570}, {1570, 1572}, {1572, 1574}, {1574, 1576}, {1576, 1578}, {1578, 1580}, {1580, 1582}, {1582, 1584}, {1584, 1586}, {1586, 1588}, {1588, 1590}, {1590, 1592}, {1592, 1594}, {1594, 1596}, {1596, 1598}, {1598, 1600}, {1600, 1602}, {1602, 1604}, {1604, 1606}, {1606, 1608}, {1608, 1610}, {1610, 1612}, {1612, 1614}, {1614, 1616}, {1616, 1618}, {1618, 1620}, {1620, 1622}, {1622, 1624}, {1624, 1626}, {1626, 1628}, {1628, 1630}, {1630, 1632}, {1632, 1634}, {1634, 1636}, {1636, 1638}, {1638, 1640}, {1640, 1642}, {1642, 1644}, {1644, 1646}, {1646, 1648}, {1648, 1650}, {1650, 1652}, {1652, 1654}, {1654, 1656}, {1656, 1658}, {1658, 1660}, {1660, 1662}, {1662, 1664}, {1664, 1666}, {1666, 1668}, {1668, 1670}, {1670, 1672}, {1672, 1674}, {1674, 1676}, {1676, 1678}, {1678, 1680}, {1680, 1682}, {1682, 1684}, {1684, 1686}, {1686, 1688}, {1688, 1690}, {1690, 1692}, {1692, 1694}, {1694, 1696}, {1696, 1698}, {1698, 1700}, {1700, 1702}, {1702, 1704}, {1704, 1706}, {1706, 1708}, {1708, 1710}, {1710, 1712}, {1712, 1714}, {1714, 1716}, {1716, 1718}, {1718, 1720}, {1720, 1722}, {1722, 1724}, {1724, 1726}, {1726, 1728}, {1728, 1730}, {1730, 1732}, {1732, 1734}, {1734, 1736}, {1736, 1738}, {1738, 1740}, {1740, 1742}, {1742, 1744}, {1744, 1746}, {1746, 1748}, {1748, 1750}, {1750, 1752}, {1752, 1754}, {1754, 1756}, {1756, 1758}, {1758, 1760}, {1760, 1762}, {1762, 1764}, {1764, 1766}, {1766, 1768}, {1768, 1770}, {1770, 1772}, {1772, 1774}, {1774, 1776}, {1776, 1778}, {1778, 1780}, {1780, 1782}, {1782, 1784}, {1784, 1786}, {1786, 1788}, {1788, 1790}, {1790, 1792}, {1792, 1794}, {1794, 1796}, {1796, 1798}, {1798, 1800}, {1800, 1802}, {1802, 1804}, {1804, 1806}, {1806, 1808}, {1808, 1810}, {1810, 1812}, {1812, 1814}, {1814, 1816}, {1816, 1818}, {1818, 1820}, {1820, 1822}, {1822, 1824}, {1824, 1826}, {1826, 1828}, {1828, 1830}, {1830, 1832}, {1832, 1834}, {1834, 1836}, {1836, 1838}, {1838, 1840}, {1840, 1842}, {1842, 1844}, {1844, 1846}, {1846, 1848}, {1848, 1850}, {1850, 1852}, {1852, 1854}, {1854, 1856}, {1856, 1858}, {1858, 1860}, {1860, 1862}, {1862, 1864}, {1864, 1866}, {1866, 1868}, {1868, 1870}, {1870, 1872}, {1872, 1874}, {1874, 1876}, {1876, 1878}, {1878, 1880}, {1880, 1882}, {1882, 1884}, {1884, 1886}, {1886, 1888}, {1888, 1890}, {1890, 1892}, {1892, 1894}, {1894, 1896}, {1896, 1898}, {1898, 1900}, {1900, 1902}, {1902, 1904}, {1904, 1906}, {1906, 1908}, {1908, 1910}, {1910, 1912}, {1912, 1914}, {1914, 1916}, {1916, 1918}, {1918, 1920}, {1920, 1922}, {1922, 1924}, {1924, 1926}, {1926, 1928}, {1928, 1930}, {1930, 1932}, {1932, 1934}, {1934, 1936}, {1936, 1938}, {1938, 1940}, {1940, 1942}, {1942, 1944}, {1944, 1946}, {1946, 1948}, {1948, 1950}, {1950, 1952}, {1952, 1954}, {1954, 1956}, {1956, 1958}, {1958, 1960}, {1960, 1962}, {1962, 1964}, {1964, 1966}, {1966, 1968}, {1968, 1970}, {1970, 1972}, {1972, 1974}, {1974, 1976}, {1976, 1978}, {1978, 1980}, {1980, 1982}, {1982, 1984}, {1984, 1986}, {1986, 1988}, {1988, 1990}, {1990, 1992}, {1992, 1994}, {1994, 1996}, {1996, 1998}, {1998, 2000}, {2000, 2002}, {2002, 2004}, {2004, 2006}, {2006, 2008}, {2008, 2010}, {2010, 2012}, {2012, 2014}, {2014, 2016}, {2016, 2018}, {2018, 2020}, {2020, 2022}, {2022, 2024}, {2024, 2026}, {2026, 2028}, {2028, 2030}, {2030, 2032}, {2032, 2034}, {2034, 2036}, {2036, 2038}, {2038, 2040}, {2040, 2042}, {2042, 2044}, {2044, 2046}, {2046, 2048}, {2048, 2050}, {2050, 2052}, {2052, 2054}, {2054, 2056}, {2056, 2058}, {2058, 2060}, {2060, 2062}, {2062, 2064}, {2064, 2066}, {2066, 2068}, {2068, 2070}, {2070, 2072}, {2072, 2074}, {2074, 2076}, {2076, 2078}, {2078, 2080}, {2080, 2082}, {2082, 2084}, {2084, 2086}, {2086, 2088}, {2088, 2090}, {2090, 2092}, {2092, 2094}, {2094, 2096}, {2096, 2098}, {2098, 2100}, {2100, 2102}, {2102, 2104}, {2104, 2106}, {2106, 2108}, {2108, 2110}, {2110, 2112}, {2112, 2114}, {2114, 2116}, {2116, 2118}, {2118, 2120}, {2120, 2122}, {2122, 2124}, {2124, 2126}, {2126, 2128}, {2128, 2130}, {2130, 2132}, {2132, 2134}, {2134, 2136}, {2136, 2138}, {2138, 2140}, {2140, 2142}, {2142, 2144}, {2144, 2146}, {2146, 2148}, {2148, 2150}, {2150, 2152}, {2152, 2154}, {2154, 2156}, {2156, 2158}, {2158, 2160}, {2160, 2162}, {2162, 2164}, {2164, 2166}, {2166, 2168}, {2168, 2170}, {2170, 2172}, {2172, 2174}, {2174, 2176}, {2176, 2178}, {2178, 2180}, {2180, 2182}, {2182, 2184}, {2184, 2186}, {2186, 2188}, {2188, 2190}, {2190, 2192}, {2192, 2194}, {2194, 2196}, {2196, 2198}, {2198, 2200}, {2200, 2202}, {2202, 2204}, {2204, 2206}, {2206, 2208}, {2208, 2210}, {2210, 2212}, {2212, 2214}, {2214, 2216}, {2216, 2218}, {2218, 2220}, {2220, 2222}, {2222, 2224}, {2224, 2226}, {2226, 2228}, {2228, 2230}, {2230, 2232}, {2232, 2234}, {2234, 2236}, {2236, 2238}, {2238, 2240}, {2240, 2242}, {2242, 2244}, {2244, 2246}, {2246, 2248}, {2248, 2250}, {2250, 2252}, {2252, 2254}, {2254, 2256}, {2256, 2258}, {2258, 2260}, {2260, 2262}, {2262, 2264}, {2264, 2266}, {2266, 2268}, {2268, 2270}, {2270, 2272}, {2272, 2274}, {2274, 2276}, {2276, 2278}, {2278, 2280}, {2280, 2282}, {2282, 2284}, {2284, 2286}, {2286, 2288}, {2288, 2290}, {2290, 2292}, {2292, 2294}, {2294, 2296}, {2296, 2298}, {2298, 2300}, {2300, 2302}, {2302, 2304}, {2304, 2306}, {2306, 2308}, {2308, 2310}, {2310, 2312}, {2312, 2314}, {2314, 2316}, {2316, 2318}, {2318, 2320}, {2320, 2322}, {2322, 2324}, {2324, 2326}, {2326, 2328}, {2328, 2330}, {2330, 2332}, {2332, 2334}, {2334, 2336}, {2336, 2338}, {2338, 2340}, {2340, 2342}, {2342, 2344}, {2344, 2346}, {2346, 2348}, {2348, 2350}, {2350, 2352}, {2352, 2354}, {2354, 2356}, {2356, 2358}, {2358, 2360}, {2360, 2362}, {2362, 2364}, {2364, 2366}, {2366, 2368}, {2368, 2370}, {2370, 2372}, {2372, 2374}, {2374, 2376}, {2376, 2378}, {2378, 2380}, {2380, 2382}, {2382, 2384}, {2384, 2386}, {2386, 2388}, {2388, 2390}, {2390, 2392}, {2392, 2394}, {2394, 2396}, {2396, 2398}, {2398, 2400}, {2400, 2402}, {2402, 2404}, {2404, 2406}, {2406, 2408}, {2408, 2410}, {2410, 2412}, {2412, 2414}, {2414, 2416}, {2416, 2418}, {2418, 2420}, {2420, 2422}, {2422, 2424}, {2424, 2426}, {2426, 2428}, {2428, 2430}, {2430, 2432}, {2432, 2434}, {2434, 2436}, {2436, 2438}, {2438, 2440}, {2440, 2442}, {2442, 2444}, {2444, 2446}, {2446, 2448}, {2448, 2450}, {2450, 2452}, {2452, 2454}, {2454, 2456}, {2456, 2458}, {2458, 2460}, {2460, 2462}, {2462, 2464}, {2464, 2466}, {2466, 2468}, {2468, 2470}, {2470, 2472}, {2472, 2474}, {2474, 2476}, {2476, 2478}, {2478, 2480}, {2480, 2482}, {2482, 2484}, {2484, 2486}, {2486, 2488}, {2488, 2490}, {2490, 2492}, {2492, 2494}, {2494, 2496}, {2496, 2498}, {2498, 2500}, {2500, 2502}, {2502, 2504}, {2504, 2506}, {2506, 2508}, {2508, 2510}, {2510, 2512}, {2512, 2514}, {2514, 2516}, {2516, 2518}, {2518, 2520}, {2520, 2522}, {2522, 2524}, {2524, 2526}, {2526, 2528}, {2528, 2530}, {2530, 2532}, {2532, 2534}, {2534, 2536}, {2536, 2538}, {2538, 2540}, {2540, 2542}, {2542, 2544}, {2544, 2546}, {2546, 2548}, {2548, 2550}, {2550, 2552}, {2552, 2554}, {2554, 2556}, {2556, 2558}, {2558, 2560}, {2560, 2562}, {2562, 2564}, {2564, 2566}, {2566, 2568}, {2568, 2570}, {2570, 2572}, {2572, 2574}, {2574, 2576}, {2576, 2578}, {2578, 2580}, {2580, 2582}, {2582, 2584}, {2584, 2586}, {2586, 2588}, {2588, 2590}, {2590, 2592}, {2592, 2594}, {2594, 2596}, {2596, 2598}, {2598, 2600}, {2600, 2602}, {2602, 2604}, {2604, 2606}, {2606, 2608}, {2608, 2610}, {2610, 2612}, {2612, 2614}, {2614, 2616}, {2616, 2618}, {2618, 2620}, {2620, 2622}, {2622, 2624}, {2624, 2626}, {2626, 2628}, {2628, 2630}, {2630, 2632}, {2632, 2634}, {2634, 2636}, {2636, 2638}, {2638, 2640}, {2640, 2642}, {2642, 2644}, {2644, 2646}, {2646, 2648}, {2648, 2650}, {2650, 2652}, {2652, 2654}, {2654, 2656}, {2656, 2658}, {2658, 2660}, {2660, 2662}, {2662, 2664}, {2664, 2666}, {2666, 2668}, {2668, 2670}, {2670, 2672}, {2672, 2674}, {2674, 2676}, {2676, 2678}, {2678, 2680}, {2680, 2682}, {2682, 2684}, {2684, 2686}, {2686, 2688}, {2688, 2690}, {2690, 2692}, {2692, 2694}, {2694, 2696}, {2696, 2698}, {2698, 2700}, {2700, 2702}, {2702, 2704}, {2704, 2706}, {2706, 2708}, {2708, 2710}, {2710, 2712}, {2712, 2714}, {2714, 2716}, {2716, 2718}, {2718, 2720}, {2720, 2722}, {2722, 2724}, {2724, 2726}, {2726, 2728}, {2728, 2730}, {2730, 2732}, {2732, 2734}, {2734, 2736}, {2736, 2738}, {2738, 2740}, {2740, 2742}, {2742, 2744}, {2744, 2746}, {2746, 2748}, {2748, 2750}, {2750, 2752}, {2752, 2754}, {2754, 2756}, {2756, 2758}, {2758, 2760}, {2760, 2762}, {2762, 2764}, {2764, 2766}, {2766, 2768}, {2768, 2770}, {2770, 2772}, {2772, 2774}, {2774, 2776}, {2776, 2778}, {2778, 2780}, {2780, 2782}, {2782, 2784}, {2784, 2786}, {2786, 2788}, {2788, 2790}, {2790, 2792}, {2792, 2794}, {2794, 2796}, {2796, 2798}, {2798, 2800}, {2800, 2802}, {2802, 2804}, {2804, 2806}, {2806, 2808}, {2808, 2810}, {2810, 2812}, {2812, 2814}, {2814, 2816}, {2816, 2818}, {2818, 2820}, {2820, 2822}, {2822, 2824}, {2824, 2826}, {2826, 2828}, {2828, 2830}, {2830, 2832}, {2832, 2834}, {2834, 2836}, {2836, 2838}, {2838, 2840}, {2840, 2842}, {2842, 2844}, {2844, 2846}, {2846, 2848}, {2848, 2850}, {2850, 2852}, {2852, 2854}, {2854, 2856}, {2856, 2858}, {2858, 2860}, {2860, 2862}, {2862, 2864}, {2864, 2866}, {2866, 2868}, {2868, 2870}, {2870, 2872}, {2872, 2874}, {2874, 2876}, {2876, 2878}, {2878, 2880}, {2880, 2882}, {2882, 2884}, {2884, 2886}, {2886, 2888}, {2888, 2890}, {2890, 2892}, {2892, 2894}, {2894, 2896}, {2896, 2898}, {2898, 2900}, {2900, 2902}, {2902, 2904}, {2904, 2906}, {2906, 2908}, {2908, 2910}, {2910, 2912}, {2912, 2914}, {2914, 2916}, {2916, 2918}, {2918, 2920}, {2920, 2922}, {2922, 2924}, {2924, 2926}, {2926, 2928}, {2928, 2930}, {2930, 2932}, {2932, 2934}, {2934, 2936}, {2936, 2938}, {2938, 2940}, {2940, 2942}, {2942, 2944}, {2944, 2946}, {2946, 2948}, {2948, 2950}, {2950, 2952}, {2952, 2954}, {2954, 2956}, {2956, 2958}, {2958, 2960}, {2960, 2962}, {2962, 2964}, {2964, 2966}, {2966, 2968}, {2968, 2970}, {2970, 2972}, {2972, 2974}, {2974, 2976}, {2976, 2978}, {2978, 2980}, {2980, 2982}, {2982, 2984}, {2984, 2986}, {2986, 2988}, {2988, 2990}, {2990, 2992}, {2992, 2994}, {2994, 2996}, {2996, 2998}, {2998, 3000}, {3000, 3002}, {3002, 3004}, {3004, 3006}, {3006, 3008}, {3008, 3010}, {3010, 3012}, {3012, 3014}, {3014, 3016}, {3016, 3018}, {3018, 3020}, {3020, 3022}, {3022, 3024}, {3024, 3026}, {3026, 3028}, {3028, 3030}, {3030, 3032}, {3032, 3034}, {3034, 3036}, {3036, 3038}, {3038, 3040}, {3040, 3042}, {3042, 3044}, {3044, 3046}, {3046, 3048}, {3048, 3050}, {3050, 3052}, {3052, 3054}, {3054, 3056}, {3056, 3058}, {3058, 3060}, {3060, 3062}, {3062, 3064}, {3064, 3066}, {3066, 3068}, {3068, 3070}, {3070, 3072}, {3072, 3074}, {3074, 3076}, {3076, 3078}, {3078, 3080}, {3080, 3082}, {3082, 3084}, {3084, 3086}, {3086, 3088}, {3088, 3090}, {3090, 3092}, {3092, 3094}, {3094, 3096}, {3096, 3098}, {3098, 3100}, {3100, 3102}, {3102, 3104}, {3104, 3106}, {3106, 3108}, {3108, 3110}, {3110, 3112}, {3112, 3114}, {3114, 3116}, {3116, 3118}, {3118, 3120}, {3120, 3122}, {3122, 3124}, {3124, 3126}, {3126, 3128}, {3128, 3130}, {3130, 3132}, {3132, 3134}, {3134, 3136}, {3136, 3138}, {3138, 3140}, {3140, 3142}, {3142, 3144}, {3144, 3146}, {3146, 3148}, {3148, 3150}, {3150, 3152}, {3152, 3154}, {3154, 3156}, {3156, 3158}, {3158, 3160}, {3160, 3162}, {3162, 3164}, {3164, 3166}, {3166, 3168}, {3168, 3170}, {3170, 3172}, {3172, 3174}, {3174, 3176}, {3176, 3178}, {3178, 3180}, {3180, 3182}, {3182, 3184}, {3184, 3186}, {3186, 3188}, {3188, 3190}, {3190, 3192}, {3192, 3194}, {3194, 3196}, {3196, 3198}, {3198, 3200}, {3200, 3202}, {3202, 3204}, {3204, 3206}, {3206, 3208}, {3208, 3210}, {3210, 3212}, {3212, 3214}, {3214, 3216}, {3216, 3218}, {3218, 3220}, {3220, 3222}, {3222, 3224}, {3224, 3226}, {3226, 3228}, {3228, 3230}, {3230, 3232}, {3232, 3234}, {3234, 3236}, {3236, 3238}, {3238, 3240}, {3240, 3242}, {3242, 3244}, {3244, 3246}, {3246, 3248}, {3248, 3250}, {3250, 3252}, {3252, 3254}, {3254, 3256}, {3256, 3258}, {3258, 3260}, {3260, 3262}, {3262, 3264}, {3264, 3266}, {3266, 3268}, {3268, 3270}, {3270, 3272}, {3272, 3274}, {3274, 3276}, {3276, 3278}, {3278, 3280}, {3280, 3282}, {3282, 3284}, {3284, 3286}, {3286, 3288}, {3288, 3290}, {3290, 3292}, {3292, 3294}, {3294, 3296}, {3296, 3298}, {3298, 3300}, {3300, 3302}, {3302, 3304}, {3304, 3306}, {3306, 3308}, {3308, 3310}, {3310, 3312}, {3312, 3314}, {3314, 3316}, {3316, 3318}, {3318, 3320}, {3320, 3322}, {3322, 3324}, {3324, 3326}, {3326, 3328}, {3328, 3330}, {3330, 3332}, {3332, 3334}, {3334, 3336}, {3336, 3338}, {3338, 3340}, {3340, 3342}, {3342, 3344}, {3344, 3346}, {3346, 3348}, {3348, 3350}, {3350, 3352}, {3352, 3354}, {3354, 3356}, {3356, 3358}, {3358, 3360}, {3360, 3362}, {3362, 3364}, {3364, 3366}, {3366, 3368}, {3368, 3370}, {3370, 3372}, {3372, 3374}, {3374, 3376}, {3376, 3378}, {3378, 3380}, {3380, 3382}, {3382, 3384}, {3384, 3386}, {3386, 3388}, {3388, 3390}, {3390, 3392}, {3392, 3394}, {3394, 3396}, {3396, 3398}, {3398, 3400}, {3400, 3402}, {3402, 3404}, {3404, 3406}, {3406, 3408}, {3408, 3410}, {3410, 3412}, {3412, 3414}, {3414, 3416}, {3416, 3418}, {3418, 3420}, {3420, 3422}, {3422, 3424}, {3424, 3426}, {3426, 3428}, {3428, 3430}, {3430, 3432}, {3432, 3434}, {3434, 3436}, {3436, 3438}, {3438, 3440}, {3440, 3442}, {3442, 3444}, {3444, 3446}, {3446, 3448}, {3448, 3450}, {3450, 3452}, {3452, 3454}, {3454, 3456}, {3456, 3458}, {3458, 3460}, {3460, 3462}, {3462, 3464}, {3464, 3466}, {3466, 3468}, {3468, 3470}, {3470, 3472}, {3472, 3474}, {3474, 3476}, {3476, 3478}, {3478, 3480}, {3480, 3482}, {3482, 3484}, {3484, 3486}, {3486, 3488}, {3488, 3490}, {3490, 3492}, {3492, 3494}, {3494, 3496}, {3496, 3498}, {3498, 3500}, {3500, 3502}, {3502, 3504}
}};

TEST(collation, relative_non_ignorable_7_fcc)
{
    std::vector<uint32_t> prev_un_norm;
    std::vector<uint32_t> prev_cps;
    boost::text::text_sort_key prev_key;
    std::vector<uint32_t> curr_un_norm;
    std::vector<uint32_t> curr_cps;
    boost::text::text_sort_key curr_key;

    bool first = true;

    std::pair<uint32_t, uint32_t> prev_r;

    for (auto r : g_cp_ranges) {
        curr_un_norm.assign(
            g_cps.begin() + r.first, g_cps.begin() + r.second);

        curr_cps.clear();
        boost::text::normalize<boost::text::nf::fcc>(
            curr_un_norm, std::back_inserter(curr_cps));

        curr_key = boost::text::collation_sort_key(
            curr_cps.begin(),
            curr_cps.end(),
            table(),
            boost::text::collation_strength::identical,
            boost::text::case_first::off,
            boost::text::case_level::off,
            boost::text::variable_weighting::non_ignorable);

        if (!first) {
            EXPECT_LE(compare(prev_key, curr_key), 0)
                << "prev un-norm cps: " << ce_dumper(prev_un_norm)
                << "prev_cps (FCC):   " << ce_dumper(prev_cps)
                << "prev_key:         " << ce_dumper(prev_key) << "\n"
                << "curr un-norm cps: " << ce_dumper(curr_un_norm)
                << "curr_cps (FCC):   " << ce_dumper(curr_cps)
                << "curr_key:         " << ce_dumper(curr_key) << "\n"
            ;

            std::string prev = boost::text::to_string(prev_cps);
            std::string curr = boost::text::to_string(curr_cps);
            auto const prev_32 = boost::text::as_utf32(prev);
            auto const curr_32 = boost::text::as_utf32(curr);
            EXPECT_LE(
                boost::text::collate(
                    prev_32.begin(),
                    prev_32.end(),
                    curr_32.begin(),
                    curr_32.end(),
                    table(),
                    boost::text::collation_strength::identical,
                    boost::text::case_first::off,
                    boost::text::case_level::off,
                    boost::text::variable_weighting::non_ignorable),
                0)
                << "prev un-norm cps: " << ce_dumper(prev_un_norm)
                << "prev_cps (FCC):   " << ce_dumper(prev_cps)
                << "prev_key:         " << ce_dumper(prev_key) << "\n"
                << "curr un-norm cps: " << ce_dumper(curr_un_norm)
                << "curr_cps (FCC):   " << ce_dumper(curr_cps)
                << "curr_key:         " << ce_dumper(curr_key) << "\n"
            ;
        }

        std::swap(curr_un_norm, prev_un_norm);
        std::swap(curr_cps, prev_cps);
        std::swap(curr_key, prev_key);

        first = false;

        prev_r = r;
    }
}

TEST(collation, relative_non_ignorable_7_nfd)
{
    std::vector<uint32_t> prev_un_norm;
    std::vector<uint32_t> prev_cps;
    boost::text::text_sort_key prev_key;
    std::vector<uint32_t> curr_un_norm;
    std::vector<uint32_t> curr_cps;
    boost::text::text_sort_key curr_key;

    bool first = true;

    std::pair<uint32_t, uint32_t> prev_r;

    for (auto r : g_cp_ranges) {
        curr_un_norm.assign(
            g_cps.begin() + r.first, g_cps.begin() + r.second);

        curr_cps.clear();
        boost::text::normalize<boost::text::nf::d>(
            curr_un_norm, std::back_inserter(curr_cps));

        curr_key = boost::text::collation_sort_key(
            curr_cps.begin(),
            curr_cps.end(),
            table(),
            boost::text::collation_strength::identical,
            boost::text::case_first::off,
            boost::text::case_level::off,
            boost::text::variable_weighting::non_ignorable);

        if (!first) {
            EXPECT_LE(compare(prev_key, curr_key), 0)
                << "prev un-norm cps: " << ce_dumper(prev_un_norm)
                << "prev_cps (NFD):   " << ce_dumper(prev_cps)
                << "prev_key:         " << ce_dumper(prev_key) << "\n"
                << "curr un-norm cps: " << ce_dumper(curr_un_norm)
                << "curr_cps (NFD):   " << ce_dumper(curr_cps)
                << "curr_key:         " << ce_dumper(curr_key) << "\n"
            ;

            std::string prev = boost::text::to_string(prev_cps);
            std::string curr = boost::text::to_string(curr_cps);
            auto const prev_32 = boost::text::as_utf32(prev);
            auto const curr_32 = boost::text::as_utf32(curr);
            EXPECT_LE(
                boost::text::collate(
                    prev_32.begin(),
                    prev_32.end(),
                    curr_32.begin(),
                    curr_32.end(),
                    table(),
                    boost::text::collation_strength::identical,
                    boost::text::case_first::off,
                    boost::text::case_level::off,
                    boost::text::variable_weighting::non_ignorable),
                0)
                << "prev un-norm cps: " << ce_dumper(prev_un_norm)
                << "prev_cps (NFD):   " << ce_dumper(prev_cps)
                << "prev_key:         " << ce_dumper(prev_key) << "\n"
                << "curr un-norm cps: " << ce_dumper(curr_un_norm)
                << "curr_cps (NFD):   " << ce_dumper(curr_cps)
                << "curr_key:         " << ce_dumper(curr_key) << "\n"
            ;
        }

        std::swap(curr_un_norm, prev_un_norm);
        std::swap(curr_cps, prev_cps);
        std::swap(curr_key, prev_key);

        first = false;

        prev_r = r;
    }
}
